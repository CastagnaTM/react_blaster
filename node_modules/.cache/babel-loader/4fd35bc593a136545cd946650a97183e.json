{"ast":null,"code":"var _jsxFileName = \"/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Components/HomeScreen.js\";\nimport React, { Component } from 'react';\nimport LevelContainer from '../Containers/LevelContainer';\nimport LevelSelector from './LevelSelector';\nimport Shoppe from './Shoppe';\nimport friendlySmall from '../Assets/FriendlySmall.png';\nimport satelliteIcon from '../Assets/SatelliteIcon.png';\nimport BombIcon from '../Assets/BombIcon.png';\nimport ShoppeIcon from '../Assets/ShoppeIcon.png'; //this component holds the homescreen, including level selection and potentially other options\n\nexport default class HomeScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playLevel: false,\n      levels: [],\n      selectedLevel: null,\n      totalPoints: 0,\n      playedOnce: false,\n      health: 4,\n      maxHealth: 4,\n      levelsCompleted: 0,\n      shoppeView: false,\n      showLevelInfo: false\n    };\n\n    this.componentDidMount = () => {\n      this.getLevels();\n    };\n\n    this.getLevels = () => {\n      fetch('http://localhost:3000/levels').then(resp => resp.json()).then(data => {\n        this.setState({\n          levels: data\n        });\n      });\n    };\n\n    this.getLevelButtons = () => {\n      let buttonArray = this.state.levels.map((level, i) => React.createElement(LevelSelector, Object.assign({\n        key: i\n      }, level, {\n        showLevelInfo: this.state.showLevelInfo,\n        loadLevelInfo: this.loadLevelInfo,\n        selectedLevel: this.state.selectedLevel,\n        loadLevel: this.loadLevel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })));\n      return buttonArray[this.state.levelsCompleted];\n    };\n\n    this.handleShoppe = () => {\n      this.setState({\n        shoppeView: true\n      });\n    };\n\n    this.handlePurchase = item => {\n      if (this.state.totalPoints >= item.price) {\n        switch (item.name) {\n          case 'Regular Health Potion':\n            if (this.state.health >= 2) {\n              this.setState({\n                health: 4\n              });\n            } else {\n              this.setState({\n                health: this.state.health + 2\n              });\n            }\n\n            break;\n\n          case 'Big Health Potion':\n            this.setState({\n              health: this.state.maxHealth\n            });\n        }\n      } // if(this.state.totalPoints >= 50){\n      //     this.setState({\n      //         health: 4,\n      //         totalPoints: this.state.totalPoints - 50\n      //     })\n      // }\n      // else{\n      //     console.log('not enough money')\n      // }\n      //some sort of response if you don't have enough money\n      // preferably a popup, like a modal\n\n    };\n\n    this.backToGame = () => {\n      this.setState({\n        shoppeView: false\n      });\n    };\n\n    this.loadShoppe = () => {\n      return React.createElement(Shoppe, {\n        backToGame: this.backToGame,\n        health: this.state.health,\n        handlePurchase: this.handlePurchase,\n        points: this.state.totalPoints,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      });\n    };\n\n    this.levelSelect = () => {\n      return React.createElement(\"div\", {\n        className: \"home-screen-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"home-screen-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text\",\n        style: {\n          marginRight: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, this.state.playedOnce ? \"New Total Score: \".concat(this.state.totalPoints) : \"Total Score: \".concat(this.state.totalPoints)), React.createElement(\"p\", {\n        className: \"text\",\n        style: {\n          marginRight: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Health: \", this.state.health)), React.createElement(\"div\", {\n        className: \"home-screen-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginLeft: '8%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"hvr-overline-from-right\",\n        onClick: this.handleShoppe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: ShoppeIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"level-select-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"level-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, this.getLevelButtons())), React.createElement(\"div\", {\n        className: \"instructions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"lines\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Instructions\"), React.createElement(\"p\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"You Have 30 seconds to:\"), React.createElement(\"div\", {\n        className: \"instructions-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"stikes-img\",\n        src: satelliteIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Shoot These\")), React.createElement(\"div\", {\n        className: \"instructions-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"stikes-img\",\n        src: friendlySmall,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"But Not These\")), React.createElement(\"div\", {\n        className: \"instructions-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"stikes-img\",\n        src: BombIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Shoot These If You Want, But It's A Bad Idea\"))))));\n    };\n\n    this.loadLevelInfo = () => {\n      this.setState({\n        showLevelInfo: true\n      });\n      console.log(this.state.showLevelInfo);\n    };\n\n    this.loadLevel = info => {\n      let obj = info;\n      this.setState({\n        selectedLevel: obj,\n        playLevel: true\n      });\n    };\n\n    this.play = () => {\n      return React.createElement(LevelContainer, {\n        health: this.state.health,\n        selectedLevel: this.state.selectedLevel,\n        levelComplete: this.levelComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      });\n    };\n\n    this.levelComplete = (completed, levelPoints, health) => {\n      if (completed === true) {\n        this.setState({\n          totalPoints: this.state.totalPoints + levelPoints,\n          health: health,\n          playedOnce: true,\n          levelsCompleted: this.state.levelsCompleted + 1,\n          showLevelInfo: false\n        });\n      }\n\n      this.setState({\n        playLevel: false\n      });\n    };\n  }\n\n  render() {\n    //until a level is selected, show the levels avaiable\n    if (this.state.playLevel === false && this.state.shoppeView === false) {\n      return this.levelSelect();\n    } //after selected a level, render the level\n    else if (this.state.playLevel === true && this.state.shoppeView === false) {\n        return this.play();\n      } else if (this.state.shoppeView === true && this.state.playLevel === false) {\n        return this.loadShoppe();\n      }\n  }\n\n}","map":{"version":3,"sources":["/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Components/HomeScreen.js"],"names":["React","Component","LevelContainer","LevelSelector","Shoppe","friendlySmall","satelliteIcon","BombIcon","ShoppeIcon","HomeScreen","state","playLevel","levels","selectedLevel","totalPoints","playedOnce","health","maxHealth","levelsCompleted","shoppeView","showLevelInfo","componentDidMount","getLevels","fetch","then","resp","json","data","setState","getLevelButtons","buttonArray","map","level","i","loadLevelInfo","loadLevel","handleShoppe","handlePurchase","item","price","name","backToGame","loadShoppe","levelSelect","marginRight","marginLeft","console","log","info","obj","play","levelComplete","completed","levelPoints","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport LevelContainer from '../Containers/LevelContainer'\nimport LevelSelector from './LevelSelector'\nimport Shoppe from './Shoppe'\nimport friendlySmall from '../Assets/FriendlySmall.png'\nimport satelliteIcon from '../Assets/SatelliteIcon.png'\nimport BombIcon from '../Assets/BombIcon.png'\nimport ShoppeIcon from '../Assets/ShoppeIcon.png'\n\n\n\n//this component holds the homescreen, including level selection and potentially other options\n\nexport default class HomeScreen extends Component{\n\n    state = {\n        playLevel: false,\n        levels: [],\n        selectedLevel: null,\n        totalPoints: 0,\n        playedOnce: false,\n        health: 4,\n        maxHealth: 4,\n        levelsCompleted: 0,\n        shoppeView: false,\n        showLevelInfo: false\n    }\n\n    //calls the fetch to load level options\n    componentDidMount = () => {\n        this.getLevels()\n    }\n\n    //fetches the levels\n    getLevels = () => {\n        fetch('http://localhost:3000/levels')\n        .then(resp => resp.json())\n        .then(data => {\n           this.setState({\n               levels: data\n           })\n        })\n    }\n\n    //renders buttons for each load-able level\n    //add abiltity to load different difficulties with different formats\n    //also hide levels that haven't been unlocked yet\n\n    getLevelButtons = () => {\n       let buttonArray = this.state.levels.map((level, i) => <LevelSelector key={i}{...level}\n        showLevelInfo={this.state.showLevelInfo} \n        loadLevelInfo={this.loadLevelInfo}\n        selectedLevel={this.state.selectedLevel} \n        loadLevel={this.loadLevel}\n        />)\n        return buttonArray[this.state.levelsCompleted]\n    }\n    \n    handleShoppe = () => {\n        this.setState({\n            shoppeView: true\n        })\n    }\n\n    handlePurchase = (item) => {\n        \n\n        if(this.state.totalPoints >= item.price){\n            switch(item.name){\n                case 'Regular Health Potion':\n                    if (this.state.health >= 2){\n                        this.setState({\n                            health: 4\n                        })\n                    }\n                    else {\n                        this.setState({\n                            health: this.state.health+2\n                        })\n                    }\n                    break;\n                case 'Big Health Potion':\n                        this.setState({\n                            health: this.state.maxHealth\n                        })\n            }\n        }\n        // if(this.state.totalPoints >= 50){\n        //     this.setState({\n        //         health: 4,\n        //         totalPoints: this.state.totalPoints - 50\n        //     })\n        // }\n        // else{\n        //     console.log('not enough money')\n        // }\n        //some sort of response if you don't have enough money\n        // preferably a popup, like a modal\n    }\n\n    backToGame = () => {\n        this.setState({\n            shoppeView: false\n        })\n    }\n\n    loadShoppe = () => {\n        return(\n            <Shoppe \n            backToGame={this.backToGame}\n            health={this.state.health}\n            handlePurchase={this.handlePurchase}\n            points={this.state.totalPoints} />\n        )    \n    }\n\n    levelSelect = () => {\n        return(\n            <div className='home-screen-background'>\n                <div className='home-screen-header'>\n                    <p className='text' style={{marginRight: '2%'}}>{this.state.playedOnce ? `New Total Score: ${this.state.totalPoints}` : `Total Score: ${this.state.totalPoints}`}</p>\n                    <p className='text' style={{marginRight: '2%'}}>Health: {this.state.health}</p>\n                </div>\n                \n                <div className='home-screen-column'>\n                <div style={{marginLeft: '8%'}}>\n                    <button \n                        className='hvr-overline-from-right'\n                        onClick={this.handleShoppe}>\n                        <img src={ShoppeIcon}/>\n                    </button>\n                </div>\n                    <div className='level-select-container'>\n                        <div className='level-select'>\n                            {this.getLevelButtons()}\n                                \n                        </div>\n                    </div>\n                    <div className='instructions'>\n                        <div className='lines'>\n                            <h3 className='text'>Instructions</h3>\n                            <p className='text'>You Have 30 seconds to:</p>\n                            <div className='instructions-icons'>\n                                <img className='stikes-img' src={satelliteIcon}></img>\n                                <p className='text'>Shoot These</p>\n                            </div>\n                            <div className='instructions-icons'>\n                                <img className='stikes-img' src={friendlySmall}></img>\n                                <p className='text'>But Not These</p>\n                            </div>\n                            <div className='instructions-icons'>\n                                <img className='stikes-img' src={BombIcon}></img>\n                                <p className='text'>Shoot These If You Want, But It's A Bad Idea</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    //uses info from the levelSelector button to set the selected level, and start the level\n    loadLevelInfo = () => {\n        this.setState({\n            showLevelInfo: true\n        })\n        console.log(this.state.showLevelInfo)\n    }\n\n    loadLevel = (info) => {\n        let obj = info\n        this.setState({\n            selectedLevel: obj,\n            playLevel: true,\n        })\n    }\n    \n\n    //renders the levelContainer (AKA the selected level)\n    play = () => {\n        return (\n            <LevelContainer \n            health={this.state.health}\n            selectedLevel={this.state.selectedLevel}\n            levelComplete={this.levelComplete}\n            />\n        )\n    }\n\n    levelComplete = (completed, levelPoints, health) =>{\n        if (completed === true){\n            this.setState({\n            totalPoints: this.state.totalPoints + levelPoints,\n            health: health,\n            playedOnce: true,\n            levelsCompleted: this.state.levelsCompleted + 1,\n            showLevelInfo: false\n            })\n        }\n        this.setState({\n            playLevel: false,\n        })\n    }\n\n    render() {\n        //until a level is selected, show the levels avaiable\n        if (this.state.playLevel === false && this.state.shoppeView === false){\n            return (\n                this.levelSelect()\n            )\n        } \n        //after selected a level, render the level\n        else if (this.state.playLevel === true && this.state.shoppeView === false) {\n            return (\n                this.play()\n            )\n        }\n        else if (this.state.shoppeView === true && this.state.playLevel === false){\n            return this.loadShoppe()\n        }\n    }\n        \n    \n\n}"]},"metadata":{},"sourceType":"module"}