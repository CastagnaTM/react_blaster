{"ast":null,"code":"var _jsxFileName = \"/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Components/HomeScreen.js\";\nimport React, { Component } from 'react';\nimport LevelContainer from '../Containers/LevelContainer';\nimport BossFightContainer from '../Containers/BossFightContainer';\nimport LevelSelector from './LevelSelector';\nimport Shoppe from './Shoppe';\nimport friendlySmall from '../Assets/FriendlySmall.png';\nimport satelliteIcon from '../Assets/SatelliteIcon.png';\nimport BombIcon from '../Assets/BombIcon.png';\nimport ShoppeIcon from '../Assets/ShoppeIcon.png'; //this component holds the homescreen, including level selection and potentially other options\n\nexport default class HomeScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playLevel: false,\n      fightBoss: false,\n      playedOnce: false,\n      levels: [],\n      selectedLevel: null,\n      levelsCompleted: 0,\n      totalPoints: 0,\n      health: 4,\n      maxHealth: 4,\n      blasterPower: 1,\n      shoppeView: false,\n      showLevelInfo: false\n    };\n\n    this.componentDidMount = () => {\n      this.getLevels();\n    };\n\n    this.getLevels = () => {\n      fetch('http://localhost:3000/levels').then(resp => resp.json()).then(data => {\n        this.setState({\n          levels: data\n        });\n      });\n    };\n\n    this.getLevelButtons = () => {\n      let buttonArray = this.state.levels.map((level, i) => React.createElement(LevelSelector, Object.assign({\n        key: i\n      }, level, {\n        showLevelInfo: this.state.showLevelInfo,\n        loadLevelInfo: this.loadLevelInfo,\n        selectedLevel: this.state.selectedLevel,\n        loadLevel: this.loadLevel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }))); // return buttonArray[this.state.levelsCompleted]\n\n      return buttonArray[3];\n    };\n\n    this.handleShoppe = () => {\n      this.setState({\n        shoppeView: true\n      });\n    };\n\n    this.handlePurchase = item => {\n      if (this.state.totalPoints >= item.price) {\n        switch (item.name) {\n          case 'Regular Health Potion':\n            if (this.state.maxHealth === 4) {\n              if (this.state.health >= 2) {\n                this.setState({\n                  health: 4,\n                  totalPoints: this.state.totalPoints - item.price\n                });\n              } else {\n                this.setState({\n                  health: this.state.health + 2,\n                  totalPoints: this.state.totalPoints - item.price\n                });\n              }\n            }\n\n            if (this.state.maxHealth === 8) {\n              if (this.state.health >= 6) {\n                this.setState({\n                  health: 8,\n                  totalPoints: this.state.totalPoints - item.price\n                });\n              } else {\n                this.setState({\n                  health: this.state.health + 2,\n                  totalPoints: this.state.totalPoints - item.price\n                });\n              }\n            }\n\n            break;\n\n          case 'Big Health Potion':\n            this.setState({\n              health: this.state.maxHealth,\n              totalPoints: this.state.totalPoints - item.price\n            });\n            break;\n\n          case \"Double Blast-O'-Matic\":\n            this.setState({\n              blasterPower: 2,\n              totalPoints: this.state.totalPoints - item.price\n            });\n            break;\n\n          case \"The RYNO\":\n            this.setState({\n              blasterPower: 5,\n              totalPoints: this.state.totalPoints - item.price\n            });\n            break;\n\n          case 'Armor Upgrade':\n            this.setState({\n              maxHealth: 8,\n              totalPoints: this.state.totalPoints - item.price\n            });\n            break;\n\n          default:\n            console.log('something went wrong');\n            break;\n        }\n      } else {\n        console.log('not enough monies!');\n      }\n    };\n\n    this.backToGame = () => {\n      this.setState({\n        shoppeView: false\n      });\n    };\n\n    this.loadShoppe = () => {\n      return React.createElement(Shoppe, {\n        backToGame: this.backToGame,\n        health: this.state.health,\n        handlePurchase: this.handlePurchase,\n        points: this.state.totalPoints,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      });\n    };\n\n    this.levelSelect = () => {\n      return React.createElement(\"div\", {\n        className: \"home-screen-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"home-screen-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text\",\n        style: {\n          marginRight: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.state.playedOnce ? \"New Total Score: \".concat(this.state.totalPoints) : \"Total Score: \".concat(this.state.totalPoints)), React.createElement(\"p\", {\n        className: \"text\",\n        style: {\n          marginRight: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Health: \", this.state.health)), React.createElement(\"div\", {\n        className: \"home-screen-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginLeft: '8%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"hvr-overline-from-right\",\n        onClick: this.handleShoppe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: ShoppeIcon,\n        alt: \"shop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"level-select-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"level-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, this.getLevelButtons())), React.createElement(\"div\", {\n        className: \"instructions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"lines\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Instructions\"), React.createElement(\"p\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"You Have 30 seconds to:\"), React.createElement(\"div\", {\n        className: \"instructions-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"stikes-img\",\n        src: satelliteIcon,\n        alt: \"satellite\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Shoot These\")), React.createElement(\"div\", {\n        className: \"instructions-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"stikes-img\",\n        src: friendlySmall,\n        alt: \"alien\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"But Not These\")), React.createElement(\"div\", {\n        className: \"instructions-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"stikes-img\",\n        src: BombIcon,\n        alt: \"bomb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Shoot These If You Want, But It's A Bad Idea\"))))));\n    };\n\n    this.loadLevelInfo = () => {\n      this.setState({\n        showLevelInfo: true\n      });\n    };\n\n    this.loadLevel = info => {\n      let obj = info;\n\n      if (obj.name === 'Boss Fight!') {\n        console.log('cl');\n        this.setState({\n          selectedLevel: obj,\n          fightBoss: true\n        });\n      } else {\n        this.setState({\n          selectedLevel: obj,\n          playLevel: true\n        });\n      }\n    };\n\n    this.play = () => {\n      return React.createElement(LevelContainer, {\n        blasterPower: this.state.blasterPower,\n        maxHealth: this.state.maxHealth,\n        health: this.state.health,\n        selectedLevel: this.state.selectedLevel,\n        levelComplete: this.levelComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      });\n    };\n\n    this.loadBossFight = () => {\n      return React.createElement(BossFightContainer, {\n        blasterPower: this.state.blasterPower,\n        maxHealth: this.state.maxHealth,\n        health: this.state.health,\n        selectedLevel: this.state.selectedLevel,\n        levelComplete: this.levelComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      });\n    };\n\n    this.levelComplete = (completed, levelPoints, health) => {\n      if (completed === true) {\n        this.setState({\n          totalPoints: this.state.totalPoints + levelPoints,\n          health: health,\n          playedOnce: true,\n          levelsCompleted: this.state.levelsCompleted + 1,\n          showLevelInfo: false\n        });\n      }\n\n      this.setState({\n        playLevel: false\n      });\n    };\n  }\n\n  render() {\n    //until a level is selected, show the levels avaiable\n    if (this.state.playLevel === false && this.state.shoppeView === false) {\n      return this.levelSelect();\n    } //after selected a level, render the level\n    else if (this.state.playLevel === true && this.state.shoppeView === false) {\n        return this.play();\n      } else if (this.state.fightBoss === true && this.state.shoppeView === false) {\n        return this.loadBossFight();\n      } else if (this.state.shoppeView === true && this.state.playLevel === false) {\n        return this.loadShoppe();\n      }\n  }\n\n}","map":{"version":3,"sources":["/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Components/HomeScreen.js"],"names":["React","Component","LevelContainer","BossFightContainer","LevelSelector","Shoppe","friendlySmall","satelliteIcon","BombIcon","ShoppeIcon","HomeScreen","state","playLevel","fightBoss","playedOnce","levels","selectedLevel","levelsCompleted","totalPoints","health","maxHealth","blasterPower","shoppeView","showLevelInfo","componentDidMount","getLevels","fetch","then","resp","json","data","setState","getLevelButtons","buttonArray","map","level","i","loadLevelInfo","loadLevel","handleShoppe","handlePurchase","item","price","name","console","log","backToGame","loadShoppe","levelSelect","marginRight","marginLeft","info","obj","play","levelComplete","loadBossFight","completed","levelPoints","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport LevelContainer from '../Containers/LevelContainer'\nimport BossFightContainer from '../Containers/BossFightContainer'\nimport LevelSelector from './LevelSelector'\nimport Shoppe from './Shoppe'\nimport friendlySmall from '../Assets/FriendlySmall.png'\nimport satelliteIcon from '../Assets/SatelliteIcon.png'\nimport BombIcon from '../Assets/BombIcon.png'\nimport ShoppeIcon from '../Assets/ShoppeIcon.png'\n\n\n\n//this component holds the homescreen, including level selection and potentially other options\n\nexport default class HomeScreen extends Component{\n\n    state = {\n        playLevel: false,\n        fightBoss: false, \n        playedOnce: false,\n        levels: [],\n        selectedLevel: null,\n        levelsCompleted: 0,\n        totalPoints: 0,\n        health: 4,\n        maxHealth: 4,\n        blasterPower: 1,\n        shoppeView: false,\n        showLevelInfo: false\n    }\n\n    //calls the fetch to load level options\n    componentDidMount = () => {\n        this.getLevels()\n    }\n\n    //fetches the levels\n    getLevels = () => {\n        fetch('http://localhost:3000/levels')\n        .then(resp => resp.json())\n        .then(data => {\n           this.setState({\n               levels: data\n           })\n        })\n    }\n\n    //renders buttons for each load-able level\n    getLevelButtons = () => {\n       let buttonArray = this.state.levels.map((level, i) => <LevelSelector key={i}{...level}\n        showLevelInfo={this.state.showLevelInfo} \n        loadLevelInfo={this.loadLevelInfo}\n        selectedLevel={this.state.selectedLevel} \n        loadLevel={this.loadLevel}\n        />)\n        // return buttonArray[this.state.levelsCompleted]\n        return buttonArray[3]\n    }\n    \n    handleShoppe = () => {\n        this.setState({\n            shoppeView: true\n        })\n    }\n\n    handlePurchase = (item) => {\n        if(this.state.totalPoints >= item.price){\n            switch(item.name){\n                case 'Regular Health Potion':\n                    if(this.state.maxHealth === 4){\n                        if (this.state.health >= 2){\n                            this.setState({\n                                health: 4,\n                                totalPoints: this.state.totalPoints - item.price\n                            })\n                        }\n                        else {\n                            this.setState({\n                                health: this.state.health+2,\n                                totalPoints: this.state.totalPoints - item.price\n                            })\n                        }\n                    }\n                    if(this.state.maxHealth === 8){\n                        if (this.state.health >= 6){\n                            this.setState({\n                                health: 8,\n                                totalPoints: this.state.totalPoints - item.price\n                            })\n                        }\n                        else {\n                            this.setState({\n                                health: this.state.health+2,\n                                totalPoints: this.state.totalPoints - item.price\n                            })\n                        }\n                    }\n                    break;\n                case 'Big Health Potion':\n                        this.setState({\n                            health: this.state.maxHealth,\n                            totalPoints: this.state.totalPoints - item.price\n                        })\n                    break;\n                case \"Double Blast-O'-Matic\":\n                        this.setState({\n                            blasterPower: 2,\n                            totalPoints: this.state.totalPoints - item.price\n                        })\n                    break;\n                case \"The RYNO\":\n                        this.setState({\n                            blasterPower: 5,\n                            totalPoints: this.state.totalPoints - item.price\n                        })\n                    break;\n                case 'Armor Upgrade':\n                    this.setState({\n                        maxHealth: 8,\n                        totalPoints: this.state.totalPoints - item.price\n                    })\n                    break;\n                default:\n                    console.log('something went wrong')\n                    break;\n            }\n        }\n        else{\n            console.log('not enough monies!')\n        }\n        \n    }\n\n    backToGame = () => {\n        this.setState({\n            shoppeView: false\n        })\n    }\n\n    loadShoppe = () => {\n        return(\n            <Shoppe \n            backToGame={this.backToGame}\n            health={this.state.health}\n            handlePurchase={this.handlePurchase}\n            points={this.state.totalPoints} />\n        )    \n    }\n\n    levelSelect = () => {\n        return(\n            <div className='home-screen-background'>\n                <div className='home-screen-header'>\n                    <p className='text' style={{marginRight: '2%'}}>{this.state.playedOnce ? `New Total Score: ${this.state.totalPoints}` : `Total Score: ${this.state.totalPoints}`}</p>\n                    <p className='text' style={{marginRight: '2%'}}>Health: {this.state.health}</p>\n                </div>\n                \n                <div className='home-screen-column'>\n                <div style={{marginLeft: '8%'}}>\n                    <button \n                        className='hvr-overline-from-right'\n                        onClick={this.handleShoppe}>\n                        <img src={ShoppeIcon} alt=\"shop\"/>\n                    </button>\n                </div>\n                    <div className='level-select-container'>\n                        <div className='level-select'>\n                            {this.getLevelButtons()}\n                                \n                        </div>\n                    </div>\n                    <div className='instructions'>\n                        <div className='lines'>\n                            <h3 className='text'>Instructions</h3>\n                            <p className='text'>You Have 30 seconds to:</p>\n                            <div className='instructions-icons'>\n                                <img className='stikes-img' src={satelliteIcon} alt=\"satellite\"></img>\n                                <p className='text'>Shoot These</p>\n                            </div>\n                            <div className='instructions-icons'>\n                                <img className='stikes-img' src={friendlySmall} alt=\"alien\"></img>\n                                <p className='text'>But Not These</p>\n                            </div>\n                            <div className='instructions-icons'>\n                                <img className='stikes-img' src={BombIcon} alt=\"bomb\"></img>\n                                <p className='text'>Shoot These If You Want, But It's A Bad Idea</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    //uses info from the levelSelector button to set the selected level, and start the level\n    loadLevelInfo = () => {\n        this.setState({\n            showLevelInfo: true\n        })\n    }\n\n    loadLevel = (info) => {\n        let obj = info\n        if(obj.name === 'Boss Fight!'){\n            console.log('cl')\n            this.setState({\n                selectedLevel: obj,\n                fightBoss: true\n            })\n        }\n        else {\n            this.setState({\n                selectedLevel: obj,\n                playLevel: true,\n            })\n        }\n        \n    }\n    \n\n    //renders the levelContainer (AKA the selected level)\n    play = () => {\n        return (\n            <LevelContainer\n                blasterPower={this.state.blasterPower}\n                maxHealth={this.state.maxHealth} \n                health={this.state.health}\n                selectedLevel={this.state.selectedLevel}\n                levelComplete={this.levelComplete}\n            />\n        )\n    }\n\n    //fight boss function here. Also update render to call this method if fightBoss === true and shoppeview = false\n\n    loadBossFight = () => {\n        return(\n            <BossFightContainer\n                blasterPower={this.state.blasterPower}\n                maxHealth={this.state.maxHealth} \n                health={this.state.health}\n                selectedLevel={this.state.selectedLevel}\n                levelComplete={this.levelComplete}\n            />\n        )\n    }\n\n    levelComplete = (completed, levelPoints, health) =>{\n        if (completed === true){\n            this.setState({\n            totalPoints: this.state.totalPoints + levelPoints,\n            health: health,\n            playedOnce: true,\n            levelsCompleted: this.state.levelsCompleted + 1,\n            showLevelInfo: false\n            })\n        }\n        this.setState({\n            playLevel: false,\n        })\n    }\n\n    render() {\n        //until a level is selected, show the levels avaiable\n        if (this.state.playLevel === false && this.state.shoppeView === false){\n            return (\n                this.levelSelect()\n            )\n        } \n        //after selected a level, render the level\n        else if (this.state.playLevel === true && this.state.shoppeView === false) {\n            return (\n                this.play()\n            )\n        }\n        else if (this.state.fightBoss === true && this.state.shoppeView === false) {\n            return (\n                this.loadBossFight()\n            )\n        }\n        else if (this.state.shoppeView === true && this.state.playLevel === false){\n            return this.loadShoppe()\n        }\n    }\n        \n    \n\n}"]},"metadata":{},"sourceType":"module"}