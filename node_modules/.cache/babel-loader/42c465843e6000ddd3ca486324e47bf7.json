{"ast":null,"code":"import _toConsumableArray from\"/Users/tomcastagna/Development/code/mod_five/Project/space_friends/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/tomcastagna/Development/code/mod_five/Project/space_friends/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/tomcastagna/Development/code/mod_five/Project/space_friends/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/tomcastagna/Development/code/mod_five/Project/space_friends/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/tomcastagna/Development/code/mod_five/Project/space_friends/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/tomcastagna/Development/code/mod_five/Project/space_friends/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import FlipMove from'react-flip-move';import Targets from'../Components/Targets';import LevelEnd from'../Components/LevelEnd';import friendlySmall from'../Assets/FriendlySmall.png';import friendlyStrike from'../Assets/FriendlyStrike.png';import healthFull from'../Assets/HealthFull.png';import health3 from'../Assets/Health3.png';import health2 from'../Assets/Health2.png';import health1 from'../Assets/Health1.png';import healthEmpty from'../Assets/HealthEmpty.png';import bossMusic from'../Assets/Audio/bossMusic.mp3';var music;var BossFightContainer=/*#__PURE__*/function(_Component){_inherits(BossFightContainer,_Component);function BossFightContainer(){var _getPrototypeOf2;var _this;_classCallCheck(this,BossFightContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(BossFightContainer)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={selectedLevel:_this.props.selectedLevel,//this should hold all info the container needs to render this level\nblasterPower:_this.props.blasterPower,health:_this.props.health,maxHealth:_this.props.maxHealth,targets:null,boss:{name:'Boss',target_type:'boss',isClicked:100},counter:0,isClicked:0,levelPoints:0,bossHealth:100,defensesDestroyed:0,success:false,levelEnd:false,firendlyBackgroundColor:'#18FCFF',debrisBackgroundColor:'#0B162A',hitFriendlyCount:0,bossView:false,gameComplete:false};_this.componentDidMount=function(){music=new Audio(bossMusic);_this.state.bossView?_this.runBoss():_this.runGame();};_this.handleClick=function(name,target_type){//finds the target that was clicked\nvar thisTarget=_this.state.targets.find(function(target){return target.name===name;});//conditional for responding to target type\nif(target_type!=='asteroid'){if(thisTarget.isClicked===0){thisTarget.isClicked=1;if(target_type==='bomb'){_this.setState({isClicked:1,health:_this.state.health-1});}if(target_type==='friendly'){_this.setState({isClicked:1,levelPoints:_this.state.levelPoints-2,hitFriendlyCount:_this.state.hitFriendlyCount+1});}}}else if(target_type==='asteroid'){if(thisTarget.isClicked<2){thisTarget.isClicked+=_this.state.blasterPower;_this.setState({isClicked:_this.state.isClicked+_this.state.blasterPower});if(thisTarget.isClicked>=2){_this.setState({levelPoints:_this.state.levelPoints+3,defensesDestroyed:_this.state.defensesDestroyed+1});}}}};_this.handleBossClick=function(name){var thisTarget=_this.state.boss;// can probably just be an object, not an array with one object in it ...\nif(thisTarget.isClicked>0){thisTarget.isClicked-=_this.state.blasterPower;_this.setState({bossHealth:_this.state.bossHealth-_this.state.blasterPower});if(thisTarget.isClicked<=0){_this.setState({levelPoints:_this.state.levelPoints+1000});}}};_this.resetTargets=function(){var targetsCopy=_toConsumableArray(_this.state.targets);var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=targetsCopy[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var target=_step.value;target.isClicked=0;}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}};_this.establishTargets=function(string){var targets=[];var targetArray=string.split('');for(var i=0;i<targetArray.length;i++){if(targetArray[i]==='1'){targets.push({name:i,target_type:'friendly',isClicked:0});}else if(targetArray[i]==='2'){targets.push({name:i,target_type:'bomb',isClicked:0});}else if(targetArray[i]==='3'){targets.push({name:i,target_type:'asteroid',isClicked:0});}}_this.setState({targets:targets});};_this.loadLevelGrid=function(){_this.setState({targets:_this.shuffleGrid(_this.state.targets)});};_this.shuffleGrid=function(array){var currentIndex=array.length,temp,random;while(0!==currentIndex){random=Math.floor(Math.random()*currentIndex);currentIndex-=1;temp=array[currentIndex];array[currentIndex]=array[random];array[random]=temp;}return array;};_this.renderTargets=function(){return React.createElement(FlipMove,{staggerDelayBy:100,appearAnimation:\"elevator\",enterAnimation:\"fade\",leaveAnimation:\"fade\"},_this.state.targets.map(function(target){return React.createElement(Targets,Object.assign({handleClick:_this.handleClick,key:target.name},target,{friendlyBackgroundColor:_this.state.friendlyBackgroundColor,debrisBackgroundColor:_this.state.debrisBackgroundColor}));}));};_this.playMusic=function(){music.play();music.loop=true;};_this.stopMusic=function(){music.pause();music.currentTime=0.0;};_this.getHealth=function(){if(_this.state.health===_this.state.maxHealth){return healthFull;}else if(_this.state.health>=_this.state.maxHealth*0.75&&_this.state.health<_this.state.maxHealth){return health3;}else if(_this.state.health>=_this.state.maxHealth*0.5&&_this.state.health<_this.state.maxHealth*0.75){return health2;}else if(_this.state.health>0&&_this.state.health<_this.state.maxHealth*0.5){return health1;}else{return healthEmpty;}};_this.runGame=function(){_this.playMusic();//debris game loop\nif(_this.state.targets===null){_this.establishTargets(_this.state.selectedLevel.targetString);}_this.runLoop();};_this.runLoop=function(){var gameLoop=setInterval(function(){_this.resetTargets();_this.loadLevelGrid();//conditions for debris loop ending\nif(_this.state.defensesDestroyed>=12){_this.setState({bossView:true,defensesDestroyed:0});_this.runBoss();}if(_this.state.bossHealth<=0){clearInterval(gameLoop);_this.setState({success:true,gameComplete:true,levelEnd:true});}//leaving first two conditions for weakened boss mode stretch goal\nelse if(_this.state.levelPoints<0||_this.state.hitFriendlyCount===3||_this.state.health===0){clearInterval(gameLoop);_this.stopMusic();_this.setState({levelEnd:true});}},2000);};_this.runBoss=function(){var bossLoop=setInterval(function(){_this.setState({counter:_this.state.counter+1});if(_this.state.bossHealth<50&&_this.state.bossHealth>35){clearInterval(bossLoop);_this.establishTargets('111122233');_this.setState({bossView:false});}if(_this.state.counter%2===0){_this.setState({bossView:false});clearInterval(bossLoop);}},2000);};_this.renderBoss=function(){return React.createElement(Targets,Object.assign({},_this.state.boss,{handleBossClick:_this.handleBossClick}));};return _this;}_createClass(BossFightContainer,[{key:\"render\",value:function render(){if(this.state.targets===null){return React.createElement(\"h1\",null,\"LOADING!\");}if(this.state.levelEnd){return React.createElement(\"div\",{className:this.props.selectedLevel.css},React.createElement(LevelEnd,{stopMusic:this.stopMusic,totalPoints:this.props.totalPoints,gameComplete:this.state.gameComplete,health:this.state.health,success:this.state.success,levelPoints:this.state.levelPoints,levelEnd:this.state.levelEnd,levelComplete:this.props.levelComplete}));}else{return React.createElement(\"div\",{className:this.props.selectedLevel.css},React.createElement(\"div\",{className:\"level-column\"},React.createElement(\"div\",{className:\"health-container\"},React.createElement(\"img\",{className:\"health-img\",src:this.getHealth(),alt:\"health meter\"})),React.createElement(\"div\",{className:\"game-play-container\"},React.createElement(\"div\",{className:\"tile-grid-container\"},React.createElement(\"div\",{className:\"tile-grid\",style:{display:this.state.bossView?'none':'block'}},this.renderTargets()),React.createElement(\"div\",{className:\"tile-grid\",style:{display:this.state.bossView?'block':'none'}},this.renderBoss())))),React.createElement(\"div\",{className:\"score-container\"},React.createElement(\"div\",{className:\"strikes\"},React.createElement(\"div\",{className:\"strikes-tile\"},React.createElement(\"img\",{className:\"stikes-img\",src:this.state.hitFriendlyCount>=1?friendlyStrike:friendlySmall,alt:\"alien strikes\"})),React.createElement(\"div\",{className:\"strikes-tile\"},React.createElement(\"img\",{className:\"stikes-img\",src:this.state.hitFriendlyCount>=2?friendlyStrike:friendlySmall,alt:\"alien strikes\"})),React.createElement(\"div\",{className:\"strikes-tile\"},React.createElement(\"img\",{className:\"stikes-img\",src:this.state.hitFriendlyCount===3?friendlyStrike:friendlySmall,alt:\"alien strikes\"}))),React.createElement(\"div\",{className:\"level-score\"},React.createElement(\"p\",{style:{color:'whitesmoke',textAlign:'center'}},this.state.bossView?'Boss Health: '+this.state.bossHealth:'Score:'+this.state.levelPoints))));}}}]);return BossFightContainer;}(Component);export{BossFightContainer as default};","map":{"version":3,"sources":["/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Containers/BossFightContainer.js"],"names":["React","Component","FlipMove","Targets","LevelEnd","friendlySmall","friendlyStrike","healthFull","health3","health2","health1","healthEmpty","bossMusic","music","BossFightContainer","state","selectedLevel","props","blasterPower","health","maxHealth","targets","boss","name","target_type","isClicked","counter","levelPoints","bossHealth","defensesDestroyed","success","levelEnd","firendlyBackgroundColor","debrisBackgroundColor","hitFriendlyCount","bossView","gameComplete","componentDidMount","Audio","runBoss","runGame","handleClick","thisTarget","find","target","setState","handleBossClick","resetTargets","targetsCopy","establishTargets","string","targetArray","split","i","length","push","loadLevelGrid","shuffleGrid","array","currentIndex","temp","random","Math","floor","renderTargets","map","friendlyBackgroundColor","playMusic","play","loop","stopMusic","pause","currentTime","getHealth","targetString","runLoop","gameLoop","setInterval","clearInterval","bossLoop","renderBoss","css","totalPoints","levelComplete","display","color","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport FlipMove from 'react-flip-move'\nimport Targets from '../Components/Targets'\nimport LevelEnd from '../Components/LevelEnd'\nimport friendlySmall from '../Assets/FriendlySmall.png'\nimport friendlyStrike from '../Assets/FriendlyStrike.png'\nimport healthFull from '../Assets/HealthFull.png'\nimport health3 from '../Assets/Health3.png'\nimport health2 from '../Assets/Health2.png'\nimport health1 from '../Assets/Health1.png'\nimport healthEmpty from '../Assets/HealthEmpty.png'\nimport bossMusic from '../Assets/Audio/bossMusic.mp3'\nlet music;\n\n\nexport default class BossFightContainer extends Component{\n\n    //refactor later to use a switch statement to run through these functions based on which level is selected\n\n    state = {\n        selectedLevel: this.props.selectedLevel, //this should hold all info the container needs to render this level\n        blasterPower: this.props.blasterPower,\n        health: this.props.health,\n        maxHealth: this.props.maxHealth,\n        targets: null,\n        boss: {name: 'Boss', target_type: 'boss', isClicked: 100},\n        counter: 0,\n        isClicked: 0,\n        levelPoints: 0,\n        bossHealth: 100,\n        defensesDestroyed: 0,\n        success: false,\n        levelEnd: false,\n        firendlyBackgroundColor: '#18FCFF',\n        debrisBackgroundColor: '#0B162A',\n        hitFriendlyCount: 0,\n        bossView: false,\n        gameComplete: false\n    }\n    \n\n    //loads everything and holds setInterval loops\n    componentDidMount = () => {\n        music = new Audio(bossMusic)\n        this.state.bossView ? this.runBoss() : this.runGame();    \n    }\n\n    //function for handling target clicks\n    handleClick = (name, target_type) => {\n        //finds the target that was clicked\n        let thisTarget = this.state.targets.find(target => target.name === name)  \n        //conditional for responding to target type\n        if(target_type !== 'asteroid'){\n            if(thisTarget.isClicked === 0){\n                thisTarget.isClicked = 1\n                if(target_type === 'bomb'){\n                    this.setState({\n                        isClicked: 1,\n                        health: this.state.health-1\n                        })\n                }\n                if(target_type === 'friendly'){\n                    this.setState({\n                        isClicked: 1,\n                        levelPoints: this.state.levelPoints-2,\n                        hitFriendlyCount: this.state.hitFriendlyCount+1\n                    })\n                }\n            }\n        }\n        else if(target_type === 'asteroid'){\n            if(thisTarget.isClicked < 2){\n                thisTarget.isClicked += this.state.blasterPower;\n                this.setState({\n                    isClicked: this.state.isClicked + this.state.blasterPower\n                })\n                if(thisTarget.isClicked >= 2){\n                    this.setState({\n                        levelPoints: this.state.levelPoints+3,\n                        defensesDestroyed: this.state.defensesDestroyed+1\n                    })\n                }\n            }        \n        }\n    }\n\n    handleBossClick = (name) => {\n        let thisTarget = this.state.boss // can probably just be an object, not an array with one object in it ...\n        if(thisTarget.isClicked > 0){\n            thisTarget.isClicked -= this.state.blasterPower;\n            this.setState({\n                bossHealth: this.state.bossHealth - this.state.blasterPower\n            })\n            if(thisTarget.isClicked <= 0){\n                this.setState({\n                    levelPoints: this.state.levelPoints+1000\n                })\n            }\n        }\n    }\n\n    // resets the state for targets, used for setInterval loop\n    resetTargets = () => {\n        let targetsCopy = [...this.state.targets];\n        for(const target of targetsCopy){\n            target.isClicked = 0\n        }\n    }\n    //translates targetString into objects\n    establishTargets = (string) => {\n        \n        let targets = [];\n        let targetArray = string.split('');\n        for (let i = 0; i < targetArray.length; i++){\n            if(targetArray[i] === '1'){\n                targets.push({name: i, target_type: 'friendly', isClicked: 0})\n            }\n            else if(targetArray[i] === '2'){\n                targets.push({name: i, target_type: 'bomb', isClicked: 0})\n            }\n            else if(targetArray[i] === '3'){\n                targets.push({name: i, target_type: 'asteroid', isClicked: 0})\n            }\n        }\n        this.setState({\n            targets: targets\n        })\n    }\n  \n    //load the targets\n    loadLevelGrid = () => {\n        this.setState({\n            targets: this.shuffleGrid(this.state.targets)\n        })\n    }\n\n    //shuffles the targets for loading\n    shuffleGrid = (array) => {\n        let currentIndex = array.length, temp, random;\n        while(0 !== currentIndex){\n            random = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            temp = array[currentIndex];\n            array[currentIndex] = array[random];\n            array[random] = temp;\n        }\n        return array\n    }\n\n    // passes the targets to the Target component\n    renderTargets = () => {\n        \n        return <FlipMove\n        staggerDelayBy={100}\n        appearAnimation=\"elevator\"\n        enterAnimation=\"fade\"\n        leaveAnimation=\"fade\"\n        >\n        {this.state.targets.map(target => <Targets \n        handleClick={this.handleClick} key={target.name}{...target}\n        friendlyBackgroundColor={this.state.friendlyBackgroundColor}\n        debrisBackgroundColor={this.state.debrisBackgroundColor}\n        />)}\n        </FlipMove>\n    }\n    playMusic = () => {\n        music.play();\n        music.loop=true;\n    }\n\n    stopMusic = () => {\n        music.pause();\n        music.currentTime = 0.0;\n    }\n\n    getHealth = () => {\n        if(this.state.health === this.state.maxHealth){\n            return healthFull;\n        }\n        else if (this.state.health >= (this.state.maxHealth * 0.75) && this.state.health < (this.state.maxHealth)){\n            return health3;\n        }\n        else if(this.state.health >= (this.state.maxHealth * 0.5) && this.state.health < (this.state.maxHealth * 0.75)){\n            return health2;\n        }\n        else if (this.state.health > 0 && this.state.health < (this.state.maxHealth * 0.5)){\n            return health1;\n        }\n        else{\n            return healthEmpty;\n        }\n    }\n\n    runGame = () => {\n        this.playMusic();\n        //debris game loop\n        if(this.state.targets === null){\n            this.establishTargets(this.state.selectedLevel.targetString)\n        }\n        this.runLoop()\n    }\n    runLoop = () => {\n        var gameLoop = setInterval(() =>{\n            this.resetTargets()\n            this.loadLevelGrid()\n            //conditions for debris loop ending\n            if(this.state.defensesDestroyed >= 12){ \n                this.setState({\n                    bossView: true,\n                    defensesDestroyed: 0\n                })\n                this.runBoss();\n            }\n            if(this.state.bossHealth <= 0){\n                clearInterval(gameLoop)\n                this.setState({\n                    success: true,\n                    gameComplete: true,\n                    levelEnd: true\n                })\n            }\n            //leaving first two conditions for weakened boss mode stretch goal\n            else if(this.state.levelPoints < 0 || this.state.hitFriendlyCount === 3\n                || this.state.health === 0){\n                clearInterval(gameLoop)\n                this.stopMusic()\n                this.setState({\n                    levelEnd: true\n                })\n            }\n        }, 2000)\n    }\n    \n\n    \n    // Function for displaying boss on screen\n    runBoss = () => {\n        var bossLoop = setInterval(() => {\n            this.setState({\n                counter: this.state.counter+1\n            })\n            if(this.state.bossHealth < 50 && this.state.bossHealth > 35){\n                clearInterval(bossLoop)\n                this.establishTargets('111122233')\n                this.setState({\n                    bossView: false\n                })\n            }\n            if(this.state.counter % 2 === 0){\n                this.setState({\n                    bossView: false\n                })\n                clearInterval(bossLoop)\n\n            }\n        }, 2000)\n    }\n    renderBoss = () => {\n        return (\n        <Targets \n        {...this.state.boss}\n        handleBossClick={this.handleBossClick} \n        />)\n        \n    }\n\n    render() {\n        if (this.state.targets === null){\n            return <h1>LOADING!</h1>\n        }\n        if (this.state.levelEnd){\n            return(\n                <div className={this.props.selectedLevel.css}>\n                    <LevelEnd\n                    stopMusic={this.stopMusic}\n                    totalPoints={this.props.totalPoints}\n                    gameComplete={this.state.gameComplete}\n                    health={this.state.health} \n                    success={this.state.success}\n                    levelPoints={this.state.levelPoints}\n                    levelEnd={this.state.levelEnd}\n                    levelComplete={this.props.levelComplete}\n                    />\n                </div>    \n            )\n        }\n        else {\n\n            return (\n                <div className={this.props.selectedLevel.css}>\n                    <div className='level-column'>\n                        <div className='health-container'>\n                            <img className='health-img' src={this.getHealth()} alt=\"health meter\"></img>\n                        </div>\n                        <div className='game-play-container'>\n                            <div className='tile-grid-container'>\n                                <div className='tile-grid' style={{display: this.state.bossView ? 'none' : 'block'}}>\n                                    {this.renderTargets()}\n                                </div>\n                                <div className='tile-grid' style={{display: this.state.bossView ? 'block' : 'none'}}>\n                                    {this.renderBoss()}\n                                </div>\n                            </div>\n                            \n                        </div>\n                    </div>\n                    <div className='score-container'>\n                    <div className='strikes'>   \n                        <div className='strikes-tile'>\n                            <img className='stikes-img' src={this.state.hitFriendlyCount >= 1 ? friendlyStrike : friendlySmall} alt=\"alien strikes\"></img>\n                        </div>\n                        <div className='strikes-tile'>\n                            <img className='stikes-img' src={this.state.hitFriendlyCount >= 2 ? friendlyStrike : friendlySmall} alt=\"alien strikes\"></img>\n                        </div>\n                        <div className='strikes-tile'>        \n                            <img className='stikes-img' src={this.state.hitFriendlyCount === 3 ? friendlyStrike : friendlySmall} alt=\"alien strikes\"></img>\n                        </div>\n                    </div> \n                        <div className='level-score'>\n                            <p style={{color:'whitesmoke', textAlign: 'center'}}>\n                                {this.state.bossView ? 'Boss Health: ' + this.state.bossHealth : 'Score:' + this.state.levelPoints}\n                                </p>\n                        </div>\n                    </div> \n                </div> \n            )\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}