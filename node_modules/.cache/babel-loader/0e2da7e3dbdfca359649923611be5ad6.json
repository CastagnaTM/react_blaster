{"ast":null,"code":"var _jsxFileName = \"/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Components/HomeScreen.js\";\nimport React, { Component } from 'react';\nimport LevelContainer from '../Containers/LevelContainer';\nimport LevelSelector from '../Components/LevelSelector'; //this component holds the homescreen, including level selection and potentially other options\n\nexport default class HomeScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      play: false,\n      levels: [],\n      selectedLevel: null,\n      totalPoints: 0\n    };\n\n    this.componentDidMount = () => {\n      this.getLevels();\n    };\n\n    this.levelSelect = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"home-screen-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Select A Level\")), React.createElement(\"div\", {\n        className: \"home-screen-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.state.levels.map((level, i) => React.createElement(LevelSelector, Object.assign({\n        key: i\n      }, level, {\n        loadLevel: this.loadLevel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })))));\n    };\n\n    this.loadLevel = info => {\n      let obj = info;\n      this.setState({\n        selectedLevel: obj,\n        play: true\n      });\n    };\n\n    this.getLevels = () => {\n      fetch('http://localhost:3000/levels').then(resp => resp.json()).then(data => {\n        this.setState({\n          levels: data\n        });\n      });\n    };\n\n    this.play = () => {\n      return React.createElement(LevelContainer, {\n        userPoints: this.state.userPoints,\n        selectedLevel: this.state.selectedLevel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    };\n\n    this.levelComplete = levelPoints => {\n      this.setState({\n        userPoints\n      });\n    };\n  }\n\n  render() {\n    //until a level is selected, show the levels avaiable\n    if (this.state.play === false) {\n      return this.levelSelect();\n    } //after selected a level, render the level\n    else {\n        return this.play();\n      }\n  }\n\n}","map":{"version":3,"sources":["/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Components/HomeScreen.js"],"names":["React","Component","LevelContainer","LevelSelector","HomeScreen","state","play","levels","selectedLevel","totalPoints","componentDidMount","getLevels","levelSelect","map","level","i","loadLevel","info","obj","setState","fetch","then","resp","json","data","userPoints","levelComplete","levelPoints","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,aAAP,MAA0B,6BAA1B,C,CAEA;;AACA,eAAe,MAAMC,UAAN,SAAyBH,SAAzB,CAAkC;AAAA;AAAA;AAAA,SAE7CI,KAF6C,GAErC;AACJC,MAAAA,IAAI,EAAE,KADF;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,aAAa,EAAE,IAHX;AAIJC,MAAAA,WAAW,EAAE;AAJT,KAFqC;;AAAA,SAU7CC,iBAV6C,GAUzB,MAAM;AACtB,WAAKC,SAAL;AACH,KAZ4C;;AAAA,SAe7CC,WAf6C,GAe/B,MAAM;AAChB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKP,KAAL,CAAWE,MAAX,CAAkBM,GAAlB,CAAsB,CAACC,KAAD,EAAQC,CAAR,KAAc,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAEA;AAApB,SAA0BD,KAA1B;AACrC,QAAA,SAAS,EAAE,KAAKE,SADqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAApC,CADL,CALJ,CADJ;AAaH,KA7B4C;;AAAA,SA+B7CA,SA/B6C,GA+BhCC,IAAD,IAAU;AAClB,UAAIC,GAAG,GAAGD,IAAV;AACA,WAAKE,QAAL,CAAc;AACVX,QAAAA,aAAa,EAAEU,GADL;AAEVZ,QAAAA,IAAI,EAAE;AAFI,OAAd;AAIH,KArC4C;;AAAA,SAuC7CK,SAvC6C,GAuCjC,MAAM;AACdS,MAAAA,KAAK,CAAC,8BAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,IAAI,IAAI;AACX,aAAKL,QAAL,CAAc;AACVZ,UAAAA,MAAM,EAAEiB;AADE,SAAd;AAGF,OAND;AAOH,KA/C4C;;AAAA,SAkD7ClB,IAlD6C,GAkDtC,MAAM;AACT,aACQ,oBAAC,cAAD;AAAgB,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWoB,UAAvC;AAAmD,QAAA,aAAa,EAAE,KAAKpB,KAAL,CAAWG,aAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADR;AAGH,KAtD4C;;AAAA,SAwD7CkB,aAxD6C,GAwD5BC,WAAD,IAAgB;AAC5B,WAAKR,QAAL,CAAc;AACVM,QAAAA;AADU,OAAd;AAGH,KA5D4C;AAAA;;AA8D7CG,EAAAA,MAAM,GAAG;AACL;AACA,QAAI,KAAKvB,KAAL,CAAWC,IAAX,KAAoB,KAAxB,EAA8B;AAC1B,aACI,KAAKM,WAAL,EADJ;AAGH,KAJD,CAKA;AALA,SAMK;AACD,eACI,KAAKN,IAAL,EADJ;AAGH;AACJ;;AA3E4C","sourcesContent":["import React, { Component } from 'react';\nimport LevelContainer from '../Containers/LevelContainer'\nimport LevelSelector from '../Components/LevelSelector'\n\n//this component holds the homescreen, including level selection and potentially other options\nexport default class HomeScreen extends Component{\n\n    state = {\n        play: false,\n        levels: [],\n        selectedLevel: null,\n        totalPoints: 0,\n    }\n\n    //calls the fetch to load level options\n    componentDidMount = () => {\n        this.getLevels()\n    }\n\n    //renders buttons for each load-able level\n    levelSelect = () => {\n        return(\n            <div>\n                <div className='home-screen-header'>\n                    <h4>Select A Level</h4>\n                </div>\n\n                <div className='home-screen-body'>\n                    {this.state.levels.map((level, i) => <LevelSelector key={i}{...level} \n                    loadLevel={this.loadLevel}\n                    />)}\n                </div>\n            </div>\n        )\n    }\n    //uses info from the levelSelector button to set the selected level, and start the level\n    loadLevel = (info) => {\n        let obj = info\n        this.setState({\n            selectedLevel: obj,\n            play: true\n        })\n    }\n    //fetches the levels\n    getLevels = () => {\n        fetch('http://localhost:3000/levels')\n        .then(resp => resp.json())\n        .then(data => {\n           this.setState({\n               levels: data\n           })\n        })\n    }\n\n    //renders the levelContainer (AKA the selected level)\n    play = () => {\n        return (\n                <LevelContainer userPoints={this.state.userPoints} selectedLevel={this.state.selectedLevel}/>\n        )\n    }\n\n    levelComplete = (levelPoints) =>{\n        this.setState({\n            userPoints\n        })\n    }\n\n    render() {\n        //until a level is selected, show the levels avaiable\n        if (this.state.play === false){\n            return (\n                this.levelSelect()\n            )\n        } \n        //after selected a level, render the level\n        else {\n            return (\n                this.play()\n            )\n        }\n    }\n        \n    \n\n}"]},"metadata":{},"sourceType":"module"}