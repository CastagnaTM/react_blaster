{"ast":null,"code":"var _jsxFileName = \"/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Containers/LevelContainer.js\";\nimport React, { Component } from 'react';\nimport Tiles from '../Components/Tiles';\nimport '../App.css';\nimport friendly1 from '../Assets/Friendly1.png';\nimport friendlySad from '../Assets/FriendlySad.png';\nexport default class LevelContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedLevel: this.props.selectedLevel // tiles: [{name: 'one'},{name: 'two'},{name: 'three'},{name: 'four'},{name: 'five'},{name: 'six'},{name: 'seven'},{name: 'eight'},{name: 'nine'},{name: 'ten'},{name: 'eleven'},{name: 'twelve'}]\n\n    };\n\n    this.loadLevelOneGrid = () => {\n      let targets = [{\n        target_type: 'debris'\n      }, {\n        target_type: 'debris'\n      }, {\n        target_type: 'debris'\n      }, {\n        target_type: 'friendly'\n      }];\n\n      for (let i = targets.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"tile-grid-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tile-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, targets.map((tile, i) => React.createElement(Tiles, Object.assign({\n        key: i\n      }, tile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      })))));\n    };\n  }\n\n  render() {\n    return this.loadLevelOneGrid();\n  }\n\n}","map":{"version":3,"sources":["/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Containers/LevelContainer.js"],"names":["React","Component","Tiles","friendly1","friendlySad","LevelContainer","state","selectedLevel","props","loadLevelOneGrid","targets","target_type","i","length","j","Math","floor","random","map","tile","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAIA,eAAe,MAAMC,cAAN,SAA6BJ,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAEjDK,KAFiD,GAEzC;AACJC,MAAAA,aAAa,EAAE,KAAKC,KAAL,CAAWD,aADtB,CAEJ;;AAFI,KAFyC;;AAAA,SAQjDE,gBARiD,GAQ9B,MAAM;AACrB,UAAIC,OAAO,GAAG,CAAC;AAACC,QAAAA,WAAW,EAAE;AAAd,OAAD,EAAyB;AAACA,QAAAA,WAAW,EAAE;AAAd,OAAzB,EAAiD;AAACA,QAAAA,WAAW,EAAE;AAAd,OAAjD,EAAyE;AAACA,QAAAA,WAAW,EAAE;AAAd,OAAzE,CAAd;;AACA,WAAK,IAAIC,CAAC,GAAGF,OAAO,CAACG,MAAR,GAAe,CAA5B,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA0C;AACtC,YAAIE,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAC,CAAnB,CAAX,CAAR;AACH;;AACD,aACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,OAAO,CAACQ,GAAR,CAAY,CAACC,IAAD,EAAOP,CAAP,KAAa,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA;AAAZ,SAAkBO,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAzB,CADL,CADJ,CADJ;AAOH,KApBgD;AAAA;;AAsBjDC,EAAAA,MAAM,GAAG;AACL,WACI,KAAKX,gBAAL,EADJ;AAGH;;AA1BgD","sourcesContent":["import React, { Component } from 'react';\nimport Tiles from '../Components/Tiles'\nimport '../App.css'\nimport friendly1 from '../Assets/Friendly1.png'\nimport friendlySad from '../Assets/FriendlySad.png'\n\n\n\nexport default class LevelContainer extends Component{\n\n    state = {\n        selectedLevel: this.props.selectedLevel,\n        // tiles: [{name: 'one'},{name: 'two'},{name: 'three'},{name: 'four'},{name: 'five'},{name: 'six'},{name: 'seven'},{name: 'eight'},{name: 'nine'},{name: 'ten'},{name: 'eleven'},{name: 'twelve'}]\n    }\n\n    //figure out randomization and then looping\n    loadLevelOneGrid = () => {\n        let targets = [{target_type: 'debris'},{target_type: 'debris'},{target_type: 'debris'},{target_type: 'friendly'}]\n        for (let i = targets.length-1; i > 0; i--){\n            let j = Math.floor(Math.random() * (i+1))\n        }\n        return(\n            <div className='tile-grid-container'>\n                <div className='tile-grid'>\n                    {targets.map((tile, i) => <Tiles key={i}{...tile}/>)}\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        return(\n            this.loadLevelOneGrid()\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}