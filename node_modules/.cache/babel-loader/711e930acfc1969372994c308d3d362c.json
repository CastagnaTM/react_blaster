{"ast":null,"code":"import React, { Component } from 'react';\nimport Tiles from '../Components/Tiles';\nimport '../App.css';\nimport friendly1 from '../Assets/Friendly1.png';\nimport friendlySad from '../Assets/FriendlySad.png';\nexport default class LevelContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedLevel: this.props.selectedLevel // tiles: [{name: 'one'},{name: 'two'},{name: 'three'},{name: 'four'},{name: 'five'},{name: 'six'},{name: 'seven'},{name: 'eight'},{name: 'nine'},{name: 'ten'},{name: 'eleven'},{name: 'twelve'}]\n\n    };\n\n    this.loadLevelOneGrid = () => {\n      let targets = [{\n        target_type: 'debris'\n      }, {\n        target_type: 'debris'\n      }, {\n        target_type: 'debris'\n      }, {\n        target_type: 'friendly'\n      }];\n      return targets;\n    };\n\n    this.loadLevelOne = () => {\n      let targets = this.loadLevelOneGrid(); //    targets = this.shuffleGrid(targets)\n\n      console.log(targets);\n      return null;\n    };\n\n    this.shuffleGrid = targets => {\n      for (let i = targets.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1))[(targets[i], targets[j])] = [targets[j], targets[i]];\n      }\n\n      return targets;\n    };\n  }\n\n  render() {\n    return this.loadLevelOne();\n  }\n\n} // return(\n//     <div className='tile-grid-container'>\n//         <div className='tile-grid'>\n//             {targets.map((tile, i) => <Tiles key={i}{...tile}/>)}\n//         </div>\n//     </div>\n// )","map":{"version":3,"sources":["/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Containers/LevelContainer.js"],"names":["React","Component","Tiles","friendly1","friendlySad","LevelContainer","state","selectedLevel","props","loadLevelOneGrid","targets","target_type","loadLevelOne","console","log","shuffleGrid","i","length","j","Math","floor","random","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAIA,eAAe,MAAMC,cAAN,SAA6BJ,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAEjDK,KAFiD,GAEzC;AACJC,MAAAA,aAAa,EAAE,KAAKC,KAAL,CAAWD,aADtB,CAEJ;;AAFI,KAFyC;;AAAA,SASjDE,gBATiD,GAS9B,MAAM;AACrB,UAAIC,OAAO,GAAG,CAAC;AAACC,QAAAA,WAAW,EAAE;AAAd,OAAD,EAAyB;AAACA,QAAAA,WAAW,EAAE;AAAd,OAAzB,EAAiD;AAACA,QAAAA,WAAW,EAAE;AAAd,OAAjD,EAAyE;AAACA,QAAAA,WAAW,EAAE;AAAd,OAAzE,CAAd;AACA,aAAOD,OAAP;AACH,KAZgD;;AAAA,SAejDE,YAfiD,GAelC,MAAM;AAClB,UAAIF,OAAO,GAAG,KAAKD,gBAAL,EAAd,CADkB,CAErB;;AACGI,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,aAAO,IAAP;AACF,KApBgD;;AAAA,SAsBjDK,WAtBiD,GAsBlCL,OAAD,IAAa;AACvB,WAAK,IAAIM,CAAC,GAAGN,OAAO,CAACO,MAAR,GAAe,CAA5B,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA0C;AACtC,YAAIE,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAC,CAAnB,CAAX,GACPN,OAAO,CAACM,CAAD,CAAP,EAAYN,OAAO,CAACQ,CAAD,CADZ,KACmB,CAACR,OAAO,CAACQ,CAAD,CAAR,EAAaR,OAAO,CAACM,CAAD,CAApB,CAD3B;AAEH;;AACD,aAAON,OAAP;AACH,KA5BgD;AAAA;;AA8BjDY,EAAAA,MAAM,GAAG;AACL,WACI,KAAKV,YAAL,EADJ;AAGH;;AAlCgD,C,CAsCrD;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport Tiles from '../Components/Tiles'\nimport '../App.css'\nimport friendly1 from '../Assets/Friendly1.png'\nimport friendlySad from '../Assets/FriendlySad.png'\n\n\n\nexport default class LevelContainer extends Component{\n\n    state = {\n        selectedLevel: this.props.selectedLevel,\n        // tiles: [{name: 'one'},{name: 'two'},{name: 'three'},{name: 'four'},{name: 'five'},{name: 'six'},{name: 'seven'},{name: 'eight'},{name: 'nine'},{name: 'ten'},{name: 'eleven'},{name: 'twelve'}]\n    }\n    \n\n    //figure out randomization and then looping\n    loadLevelOneGrid = () => {\n        let targets = [{target_type: 'debris'},{target_type: 'debris'},{target_type: 'debris'},{target_type: 'friendly'}]\n        return targets\n    }\n    \n\n    loadLevelOne = () => {\n       let targets = this.loadLevelOneGrid()\n    //    targets = this.shuffleGrid(targets)\n       console.log(targets)\n       return null\n    }\n\n    shuffleGrid = (targets) => {\n        for (let i = targets.length-1; i > 0; i--){\n            let j = Math.floor(Math.random() * (i+1))\n            [targets[i], targets[j]] = [targets[j], targets[i]]\n        }\n        return targets\n    }\n\n    render() {\n        return(\n            this.loadLevelOne()\n        )\n    }\n\n}\n\n// return(\n//     <div className='tile-grid-container'>\n//         <div className='tile-grid'>\n//             {targets.map((tile, i) => <Tiles key={i}{...tile}/>)}\n//         </div>\n//     </div>\n// )"]},"metadata":{},"sourceType":"module"}