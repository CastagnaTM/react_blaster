{"ast":null,"code":"var _jsxFileName = \"/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Components/LevelEnd.js\";\nimport React, { Component } from 'react';\nimport BossIntro from './BossIntro';\nlet highscores;\nexport default class LevelEnd extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gameEnd: false,\n      highscores: null,\n      name: '',\n      score: null,\n      show: false,\n      showBossIntro: false\n    };\n\n    this.componentDidMount = () => {\n      if (this.props.success) {\n        this.setCurrentScore();\n        this.getHighscores();\n      }\n    };\n\n    this.handleReturn = () => {\n      this.props.levelComplete(this.props.success, this.props.levelPoints, this.props.health);\n    };\n\n    this.handleBossIntro = () => {\n      return React.createElement(BossIntro, {\n        health: this.state.health,\n        success: this.state.success,\n        levelPoints: this.state.levelPoints,\n        levelEnd: this.state.levelEnd,\n        levelComplete: this.props.levelComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    };\n\n    this.displayHighscores = () => {\n      let allHighscores = this.state.highscores.sort((a, b) => a.score < b.score ? 1 : -1);\n      highscores = allHighscores.slice(0, 5);\n      return highscores.map(score => React.createElement(\"li\", {\n        className: \"text\",\n        style: {\n          marginLeft: '34%',\n          padding: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, score.name, \" . . . \", score.score));\n    };\n\n    this.setCurrentScore = () => {\n      this.setState({\n        score: this.props.levelPoints + this.props.totalPoints\n      });\n    };\n\n    this.getHighscores = () => {\n      fetch('http://localhost:3000/users').then(resp => resp.json()).then(data => {\n        this.setState({\n          highscores: data\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleHighScores = event => {\n      event.preventDefault();\n      fetch('http://localhost:3000/highscore', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Accept': \"application/json\"\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          score: this.state.score\n        })\n      }).then(resp => resp.json()).then(data => {\n        if (data.errors) {\n          alert(data.errors);\n        }\n      });\n      this.setState({\n        show: true,\n        name: this.state.name,\n        score: this.state.score\n      });\n    };\n  }\n\n  render() {\n    if (this.state.showBossIntro === true) {} else {\n      return React.createElement(\"div\", {\n        className: \"level-end-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"level-end-grid\",\n        style: {\n          display: this.props.scoresView ? 'none' : 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text\",\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.props.success ? \"Congrats! You Scored \".concat(this.props.levelPoints, \" Points!\") : 'Sorry, you lost this time around...'), React.createElement(\"p\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.props.gameComplete ? \"You Beat The Game With \".concat(this.state.score, \" Points! Enter Your Name Below:\") : null)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          display: this.props.gameComplete ? 'none' : 'block'\n        },\n        className: \"hvr-ripple-out\",\n        onClick: this.props.levelName === 'Level Three' ? this.handleBossIntro : this.handleReturn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Continue\"))), React.createElement(\"div\", {\n        className: \"highscores-container\",\n        style: {\n          display: this.props.gameComplete ? 'block' : 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"text\",\n        style: {\n          marginLeft: '40%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"High Scores\"), React.createElement(\"form\", {\n        className: \"form\",\n        onSubmit: this.handleHighScores,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"input\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        placeholder: \"Name...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"scores-button\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"text\",\n        style: {\n          marginLeft: '34%',\n          padding: '1%',\n          display: this.state.show ? 'list-item' : 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \" \", this.state.name, \" ... \", this.state.score), this.state.highscores ? this.displayHighscores() : null)));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Components/LevelEnd.js"],"names":["React","Component","BossIntro","highscores","LevelEnd","state","gameEnd","name","score","show","showBossIntro","componentDidMount","props","success","setCurrentScore","getHighscores","handleReturn","levelComplete","levelPoints","health","handleBossIntro","levelEnd","displayHighscores","allHighscores","sort","a","b","slice","map","marginLeft","padding","setState","totalPoints","fetch","then","resp","json","data","handleChange","event","target","value","handleHighScores","preventDefault","method","headers","body","JSON","stringify","errors","alert","render","display","scoresView","textAlign","gameComplete","levelName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,IAAIC,UAAJ;AAEA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE5CI,KAF4C,GAEpC;AACJC,MAAAA,OAAO,EAAE,KADL;AAEJH,MAAAA,UAAU,EAAE,IAFR;AAGJI,MAAAA,IAAI,EAAE,EAHF;AAIJC,MAAAA,KAAK,EAAE,IAJH;AAKJC,MAAAA,IAAI,EAAE,KALF;AAMJC,MAAAA,aAAa,EAAE;AANX,KAFoC;;AAAA,SAW5CC,iBAX4C,GAWxB,MAAM;AAEtB,UAAG,KAAKC,KAAL,CAAWC,OAAd,EAAsB;AAClB,aAAKC,eAAL;AACA,aAAKC,aAAL;AACH;AAEJ,KAlB2C;;AAAA,SAoB5CC,YApB4C,GAoB7B,MAAM;AACjB,WAAKJ,KAAL,CAAWK,aAAX,CAAyB,KAAKL,KAAL,CAAWC,OAApC,EAA6C,KAAKD,KAAL,CAAWM,WAAxD,EAAqE,KAAKN,KAAL,CAAWO,MAAhF;AACH,KAtB2C;;AAAA,SAuB5CC,eAvB4C,GAuB1B,MAAM;AACpB,aACI,oBAAC,SAAD;AAEA,QAAA,MAAM,EAAE,KAAKf,KAAL,CAAWc,MAFnB;AAGI,QAAA,OAAO,EAAE,KAAKd,KAAL,CAAWQ,OAHxB;AAII,QAAA,WAAW,EAAE,KAAKR,KAAL,CAAWa,WAJ5B;AAKI,QAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWgB,QALzB;AAMI,QAAA,aAAa,EAAE,KAAKT,KAAL,CAAWK,aAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAWH,KAnC2C;;AAAA,SAqC5CK,iBArC4C,GAqCxB,MAAM;AACtB,UAAIC,aAAa,GAAG,KAAKlB,KAAL,CAAWF,UAAX,CAAsBqB,IAAtB,CAA2B,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,CAACjB,KAAF,GAAUkB,CAAC,CAAClB,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CAA7D,CAApB;AACAL,MAAAA,UAAU,GAAGoB,aAAa,CAACI,KAAd,CAAoB,CAApB,EAAsB,CAAtB,CAAb;AACA,aAAQxB,UAAU,CAACyB,GAAX,CAAepB,KAAK,IAAI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAqB,QAAA,KAAK,EAAE;AAACqB,UAAAA,UAAU,EAAE,KAAb;AAAoBC,UAAAA,OAAO,EAAE;AAA7B,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiEtB,KAAK,CAACD,IAAvE,aAAoFC,KAAK,CAACA,KAA1F,CAAxB,CAAR;AACH,KAzC2C;;AAAA,SA2C5CM,eA3C4C,GA2C1B,MAAM;AACpB,WAAKiB,QAAL,CAAc;AACVvB,QAAAA,KAAK,EAAE,KAAKI,KAAL,CAAWM,WAAX,GAAyB,KAAKN,KAAL,CAAWoB;AADjC,OAAd;AAGH,KA/C2C;;AAAA,SAiD5CjB,aAjD4C,GAiD5B,MAAM;AAClBkB,MAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,IAAI,IAAI;AACV,aAAKN,QAAL,CAAc;AACV5B,UAAAA,UAAU,EAAEkC;AADF,SAAd;AAGH,OAND;AAOH,KAzD2C;;AAAA,SA2D5CC,YA3D4C,GA2D5BC,KAAD,IAAW;AACtB,WAAKR,QAAL,CAAc;AACZ,SAACQ,KAAK,CAACC,MAAN,CAAajC,IAAd,GAAqBgC,KAAK,CAACC,MAAN,CAAaC;AADtB,OAAd;AAGH,KA/D2C;;AAAA,SAiE5CC,gBAjE4C,GAiExBH,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACI,cAAN;AACAV,MAAAA,KAAK,CAAC,iCAAD,EAAmC;AACpCW,QAAAA,MAAM,EAAE,MAD4B;AAEpCC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAU;AAFL,SAF2B;AAMpCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBzC,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IADA;AAEjBC,UAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AAFD,SAAf;AAN8B,OAAnC,CAAL,CAWC0B,IAXD,CAWMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAXd,EAYCF,IAZD,CAYMG,IAAI,IAAI;AACV,YAAIA,IAAI,CAACY,MAAT,EAAgB;AACZC,UAAAA,KAAK,CAACb,IAAI,CAACY,MAAN,CAAL;AACH;AACJ,OAhBD;AAiBA,WAAKlB,QAAL,CAAc;AACVtB,QAAAA,IAAI,EAAE,IADI;AAEVF,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAFP;AAGVC,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AAHR,OAAd;AAKH,KAzF2C;AAAA;;AA2F5C2C,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAK9C,KAAL,CAAWK,aAAX,KAA6B,IAAhC,EAAqC,CAEpC,CAFD,MAGI;AACA,aACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,KAAK,EAAE;AAAC0C,UAAAA,OAAO,EAAE,KAAKxC,KAAL,CAAWyC,UAAX,GAAwB,MAAxB,GAAiC;AAA3C,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAoB,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK1C,KAAL,CAAWC,OAAX,kCAA6C,KAAKD,KAAL,CAAWM,WAAxD,gBAAgF,qCADrF,CADJ,EAII;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKN,KAAL,CAAW2C,YAAX,oCAAoD,KAAKlD,KAAL,CAAWG,KAA/D,uCAAwG,IADzG,CAJJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAE;AAAC4C,UAAAA,OAAO,EAAE,KAAKxC,KAAL,CAAW2C,YAAX,GAA0B,MAA1B,GAAmC;AAA7C,SAAf;AACA,QAAA,SAAS,EAAC,gBADV;AAEA,QAAA,OAAO,EAAE,KAAK3C,KAAL,CAAW4C,SAAX,KAAyB,aAAzB,GAAyC,KAAKpC,eAA9C,GAAgE,KAAKJ,YAF9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CATJ,CADJ,EAgBI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAsC,QAAA,KAAK,EAAE;AAACoC,UAAAA,OAAO,EAAE,KAAKxC,KAAL,CAAW2C,YAAX,GAA0B,OAA1B,GAAoC;AAA9C,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAqB,QAAA,KAAK,EAAE;AAAC1B,UAAAA,UAAU,EAAE;AAAb,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,QAAQ,EAAE,KAAKa,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,IAAI,EAAC,MAA9B;AAAqC,QAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWE,IAAvD;AAA6D,QAAA,QAAQ,EAAE,KAAK+B,YAA5E;AAA0F,QAAA,WAAW,EAAC,SAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAkC,QAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAFJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAqB,QAAA,KAAK,EAAE;AAACT,UAAAA,UAAU,EAAE,KAAb;AAAoBC,UAAAA,OAAO,EAAE,IAA7B;AAAmCsB,UAAAA,OAAO,EAAE,KAAK/C,KAAL,CAAWI,IAAX,GAAkB,WAAlB,GAAgC;AAA5E,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAmH,KAAKJ,KAAL,CAAWE,IAA9H,WAAyI,KAAKF,KAAL,CAAWG,KAApJ,CADJ,EAEK,KAAKH,KAAL,CAAWF,UAAX,GAAwB,KAAKmB,iBAAL,EAAxB,GAAmD,IAFxD,CANJ,CAhBJ,CADJ;AA8BH;AACJ;;AA/H2C","sourcesContent":["import React, { Component } from 'react'\nimport BossIntro from './BossIntro'\n\nlet highscores;\n\nexport default class LevelEnd extends Component {\n\n    state = {\n        gameEnd: false,\n        highscores: null,\n        name: '',\n        score: null,\n        show: false,\n        showBossIntro: false\n    }\n\n    componentDidMount = () => {\n        \n        if(this.props.success){\n            this.setCurrentScore()\n            this.getHighscores()\n        }\n        \n    }\n\n    handleReturn = () => {\n        this.props.levelComplete(this.props.success, this.props.levelPoints, this.props.health)\n    }\n    handleBossIntro = () => {\n        return(\n            <BossIntro\n            \n            health={this.state.health} \n                success={this.state.success}\n                levelPoints={this.state.levelPoints}\n                levelEnd={this.state.levelEnd}\n                levelComplete={this.props.levelComplete} \n            />\n        )\n\n    }\n\n    displayHighscores = () => { \n        let allHighscores = this.state.highscores.sort((a,b) => a.score < b.score ? 1 : -1)\n        highscores = allHighscores.slice(0,5)\n        return( highscores.map(score => <li className='text' style={{marginLeft: '34%', padding: '1%'}}>{score.name} . . . {score.score}</li>) )\n    }\n\n    setCurrentScore = () => {\n        this.setState({\n            score: this.props.levelPoints + this.props.totalPoints\n        })\n    }\n\n    getHighscores = () => {\n        fetch('http://localhost:3000/users')\n        .then(resp => resp.json())\n        .then(data => {\n            this.setState({\n                highscores: data\n            })\n        })\n    }\n\n    handleChange = (event) => {\n        this.setState({\n          [event.target.name]: event.target.value\n        })\n    }\n\n    handleHighScores = (event) => {\n        event.preventDefault()\n        fetch('http://localhost:3000/highscore',{\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': \"application/json\"\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                score: this.state.score\n                })\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            if (data.errors){\n                alert(data.errors)\n            }\n        })\n        this.setState({\n            show: true,\n            name: this.state.name,\n            score: this.state.score \n        })\n    }\n\n    render(){\n        if(this.state.showBossIntro === true){\n\n        }\n        else{\n            return(\n                <div className='level-end-container'>\n                    <div className='level-end-grid' style={{display: this.props.scoresView ? 'none' : 'block'}}>\n                        <div>\n                            <p className='text' style={{textAlign: 'center'}}>\n                                {this.props.success ? `Congrats! You Scored ${this.props.levelPoints} Points!` : 'Sorry, you lost this time around...'}\n                            </p>\n                            <p className='text'>\n                            {this.props.gameComplete ? `You Beat The Game With ${this.state.score} Points! Enter Your Name Below:` : null}\n                            </p>\n                        </div>\n                        <div>\n                            <button style={{display: this.props.gameComplete ? 'none' : 'block'}}\n                            className='hvr-ripple-out' \n                            onClick={this.props.levelName === 'Level Three' ? this.handleBossIntro : this.handleReturn}>Continue</button>\n                        </div>\n                    </div>\n                    <div className='highscores-container' style={{display: this.props.gameComplete ? 'block' : 'none'}}>\n                        <h4 className='text' style={{marginLeft: '40%'}}>High Scores</h4>\n                        <form className=\"form\" onSubmit={this.handleHighScores}>\n                            <input className=\"input\" name=\"name\" value={this.state.name} onChange={this.handleChange} placeholder=\"Name...\" />\n                            <button className='scores-button' type=\"submit\">Submit</button>\n                        </form>\n                        <ul>\n                            <li className='text' style={{marginLeft: '34%', padding: '1%', display: this.state.show ? 'list-item' : 'none'}}> {this.state.name} ... {this.state.score}</li>\n                            {this.state.highscores ? this.displayHighscores() : null}\n                        </ul>\n                    </div>\n                </div>\n            )\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}