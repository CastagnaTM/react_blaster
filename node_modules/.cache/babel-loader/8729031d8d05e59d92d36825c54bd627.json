{"ast":null,"code":"var _jsxFileName = \"/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Containers/LevelContainer.js\";\nimport React, { Component } from 'react';\nimport Tiles from '../Components/Tiles';\nimport '../App.css';\nimport friendly1 from '../Assets/Friendly1.png';\nimport friendlySad from '../Assets/FriendlySad.png';\nexport default class LevelContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedLevel: this.props.selectedLevel,\n      targets: null // tiles: [{name: 'one'},{name: 'two'},{name: 'three'},{name: 'four'},{name: 'five'},{name: 'six'},{name: 'seven'},{name: 'eight'},{name: 'nine'},{name: 'ten'},{name: 'eleven'},{name: 'twelve'}]\n\n    };\n\n    this.componentDidMount = () => {\n      this.loadLevelOne();\n    };\n\n    this.loadLevelOneGrid = () => {\n      let targets = this.shuffleGrid([{\n        target_type: 'debris'\n      }, {\n        target_type: 'debris'\n      }, {\n        target_type: 'debris'\n      }, {\n        target_type: 'friendly'\n      }]);\n      return targets;\n    };\n\n    this.loadLevelOne = () => {\n      let targets = this.loadLevelOneGrid();\n      this.setState({\n        targets: targets\n      });\n    };\n\n    this.levelInterval = () => {\n      let myInt = setInterval(this.loadLevelOne(), 1000);\n      return myInt;\n    };\n\n    this.shuffleGrid = array => {\n      //Fisher-Yates shuffle\n      for (let i = array.length - 1; i > 0; i--) {\n        var _ref = [array[Math.floor(Math.random() * (i + 1))], array[i]];\n        array[i] = _ref[0];\n        array[Math.floor(Math.random() * (i + 1))] = _ref[1];\n      }\n\n      return array;\n    };\n  }\n\n  render() {\n    if (this.state.targets === null) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"LOADING!\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"tile-grid-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tile-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.targets.map((tile, i) => React.createElement(Tiles, Object.assign({\n      key: i\n    }, tile, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Containers/LevelContainer.js"],"names":["React","Component","Tiles","friendly1","friendlySad","LevelContainer","state","selectedLevel","props","targets","componentDidMount","loadLevelOne","loadLevelOneGrid","shuffleGrid","target_type","setState","levelInterval","myInt","setInterval","array","i","length","Math","floor","random","render","map","tile"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAIA,eAAe,MAAMC,cAAN,SAA6BJ,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAEjDK,KAFiD,GAEzC;AACJC,MAAAA,aAAa,EAAE,KAAKC,KAAL,CAAWD,aADtB;AAEJE,MAAAA,OAAO,EAAE,IAFL,CAGJ;;AAHI,KAFyC;;AAAA,SAQjDC,iBARiD,GAQ7B,MAAM;AACtB,WAAKC,YAAL;AACH,KAVgD;;AAAA,SAajDC,gBAbiD,GAa9B,MAAM;AACrB,UAAIH,OAAO,GAAG,KAAKI,WAAL,CAAiB,CAAC;AAACC,QAAAA,WAAW,EAAE;AAAd,OAAD,EAAyB;AAACA,QAAAA,WAAW,EAAE;AAAd,OAAzB,EAAiD;AAACA,QAAAA,WAAW,EAAE;AAAd,OAAjD,EAAyE;AAACA,QAAAA,WAAW,EAAE;AAAd,OAAzE,CAAjB,CAAd;AACA,aAAOL,OAAP;AACH,KAhBgD;;AAAA,SAkBjDE,YAlBiD,GAkBlC,MAAM;AAClB,UAAIF,OAAO,GAAG,KAAKG,gBAAL,EAAd;AACA,WAAKG,QAAL,CAAc;AACVN,QAAAA,OAAO,EAAEA;AADC,OAAd;AAGF,KAvBgD;;AAAA,SAwBjDO,aAxBiD,GAwBjC,MAAM;AACnB,UAAIC,KAAK,GAAGC,WAAW,CAAC,KAAKP,YAAL,EAAD,EAAsB,IAAtB,CAAvB;AACA,aAAOM,KAAP;AACF,KA3BgD;;AAAA,SA6BjDJ,WA7BiD,GA6BlCM,KAAD,IAAW;AACrB;AACA,WAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAa,CAA1B,EAA6BD,CAAC,GAAG,CAAjC,EAAoCA,CAAC,EAArC,EAAwC;AAAA,mBACmB,CAACD,KAAK,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,CAAC,GAAC,CAAnB,CAAX,CAAD,CAAN,EAA2CD,KAAK,CAACC,CAAD,CAAhD,CADnB;AACnCD,QAAAA,KAAK,CAACC,CAAD,CAD8B;AACzBD,QAAAA,KAAK,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,CAAC,GAAC,CAAnB,CAAX,CAAD,CADoB;AAEvC;;AACD,aAAOD,KAAP;AACH,KAnCgD;AAAA;;AAqCjDM,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKnB,KAAL,CAAWG,OAAX,KAAuB,IAA3B,EAAgC;AAC5B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;AACD,WACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWG,OAAX,CAAmBiB,GAAnB,CAAuB,CAACC,IAAD,EAAOP,CAAP,KAAa,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA;AAAZ,OAAkBO,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAApC,CADL,CADJ,CADJ;AAOH;;AAhDgD","sourcesContent":["import React, { Component } from 'react';\nimport Tiles from '../Components/Tiles'\nimport '../App.css'\nimport friendly1 from '../Assets/Friendly1.png'\nimport friendlySad from '../Assets/FriendlySad.png'\n\n\n\nexport default class LevelContainer extends Component{\n\n    state = {\n        selectedLevel: this.props.selectedLevel,\n        targets: null\n        // tiles: [{name: 'one'},{name: 'two'},{name: 'three'},{name: 'four'},{name: 'five'},{name: 'six'},{name: 'seven'},{name: 'eight'},{name: 'nine'},{name: 'ten'},{name: 'eleven'},{name: 'twelve'}]\n    }\n    \n    componentDidMount = () => {\n        this.loadLevelOne()\n    }\n\n    //figure out randomization and then looping\n    loadLevelOneGrid = () => {\n        let targets = this.shuffleGrid([{target_type: 'debris'},{target_type: 'debris'},{target_type: 'debris'},{target_type: 'friendly'}])\n        return targets\n    }\n\n    loadLevelOne = () => {\n       let targets = this.loadLevelOneGrid()\n       this.setState({\n           targets: targets\n       })\n    }\n    levelInterval = () => {\n       let myInt = setInterval(this.loadLevelOne(), 1000)\n       return myInt\n    }\n\n    shuffleGrid = (array) => {\n        //Fisher-Yates shuffle\n        for (let i = array.length-1; i > 0; i--){\n            [array[i], array[Math.floor(Math.random() * (i+1))]] = [array[Math.floor(Math.random() * (i+1))], array[i]]\n        }\n        return array\n    }\n\n    render() {\n        if (this.state.targets === null){\n            return <h1>LOADING!</h1>\n        }\n        return (\n            <div className='tile-grid-container'>\n                <div className='tile-grid'>\n                    {this.state.targets.map((tile, i) => <Tiles key={i}{...tile}/>)}\n                </div>\n            </div>\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}