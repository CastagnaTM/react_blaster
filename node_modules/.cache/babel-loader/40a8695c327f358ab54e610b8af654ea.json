{"ast":null,"code":"var _jsxFileName = \"/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Containers/LevelContainer.js\";\nimport React, { Component } from 'react';\nimport Tiles from '../Components/Tiles';\nimport '../App.css';\nimport friendly1 from '../Assets/Friendly1.png';\nimport friendlySad from '../Assets/FriendlySad.png';\nexport default class LevelContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedLevel: this.props.selectedLevel,\n      targets: [{\n        name: 'one',\n        target_type: 'debris'\n      }, {\n        name: 'two',\n        target_type: 'debris'\n      }, {\n        name: 'three',\n        target_type: 'debris'\n      }, {\n        name: 'four',\n        target_type: 'friendly'\n      }],\n      counter: 0 // tiles: [{name: 'one'},{name: 'two'},{name: 'three'},{name: 'four'},{name: 'five'},{name: 'six'},{name: 'seven'},{name: 'eight'},{name: 'nine'},{name: 'ten'},{name: 'eleven'},{name: 'twelve'}]\n\n    };\n\n    this.componentDidMount = () => {\n      this.interval = setInterval(() => {\n        this.loadLevelOneGrid();\n      }, 2000);\n    };\n\n    this.loadLevelOneGrid = () => {\n      l;\n      this.setState({\n        targets: this.shuffleGrid(...this.state.targets)\n      });\n    };\n\n    this.shuffleGrid = array => {\n      let currentIndex = array.length,\n          temp,\n          random;\n\n      while (0 !== currentIndex) {\n        random = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temp = array[currentIndex];\n        array[currentIndex] = array[random];\n        array[random] = temp;\n      }\n\n      return array;\n    };\n\n    this.renderTargets = () => {\n      return this.state.targets.map((tile, i) => React.createElement(Tiles, Object.assign({\n        key: i\n      }, tile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })));\n    };\n  }\n\n  render() {\n    if (this.state.targets === null) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"LOADING!\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"tile-grid-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tile-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.renderTargets()));\n  }\n\n}","map":{"version":3,"sources":["/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Containers/LevelContainer.js"],"names":["React","Component","Tiles","friendly1","friendlySad","LevelContainer","state","selectedLevel","props","targets","name","target_type","counter","componentDidMount","interval","setInterval","loadLevelOneGrid","l","setState","shuffleGrid","array","currentIndex","length","temp","random","Math","floor","renderTargets","map","tile","i","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAIA,eAAe,MAAMC,cAAN,SAA6BJ,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAIjDK,KAJiD,GAIzC;AACJC,MAAAA,aAAa,EAAE,KAAKC,KAAL,CAAWD,aADtB;AAEJE,MAAAA,OAAO,EAAE,CAAC;AAACC,QAAAA,IAAI,EAAE,KAAP;AAAcC,QAAAA,WAAW,EAAE;AAA3B,OAAD,EAAsC;AAACD,QAAAA,IAAI,EAAE,KAAP;AAAcC,QAAAA,WAAW,EAAE;AAA3B,OAAtC,EAA2E;AAACD,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,WAAW,EAAE;AAA7B,OAA3E,EAAkH;AAACD,QAAAA,IAAI,EAAE,MAAP;AAAeC,QAAAA,WAAW,EAAE;AAA5B,OAAlH,CAFL;AAGJC,MAAAA,OAAO,EAAE,CAHL,CAIJ;;AAJI,KAJyC;;AAAA,SAWjDC,iBAXiD,GAW7B,MAAM;AACtB,WAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAK;AAC7B,aAAKC,gBAAL;AACH,OAF0B,EAExB,IAFwB,CAA3B;AAGH,KAfgD;;AAAA,SAoBjDA,gBApBiD,GAoB9B,MAAM;AACrBC,MAAAA,CAAC;AACD,WAAKC,QAAL,CAAc;AACVT,QAAAA,OAAO,EAAE,KAAKU,WAAL,CAAiB,GAAG,KAAKb,KAAL,CAAWG,OAA/B;AADC,OAAd;AAGH,KAzBgD;;AAAA,SAkCjDU,WAlCiD,GAkClCC,KAAD,IAAW;AACrB,UAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,UAAiCC,IAAjC;AAAA,UAAuCC,MAAvC;;AACA,aAAM,MAAMH,YAAZ,EAAyB;AACrBG,QAAAA,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBH,YAA3B,CAAT;AACAA,QAAAA,YAAY,IAAI,CAAhB;AACAE,QAAAA,IAAI,GAAGH,KAAK,CAACC,YAAD,CAAZ;AACAD,QAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,MAAD,CAA3B;AACAJ,QAAAA,KAAK,CAACI,MAAD,CAAL,GAAgBD,IAAhB;AACH;;AACD,aAAOH,KAAP;AACH,KA5CgD;;AAAA,SA8CjDO,aA9CiD,GA8CjC,MAAM;AAClB,aAAO,KAAKrB,KAAL,CAAWG,OAAX,CAAmBmB,GAAnB,CAAuB,CAACC,IAAD,EAAOC,CAAP,KAAa,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA;AAAZ,SAAkBD,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAApC,CAAP;AACH,KAhDgD;AAAA;;AAkDjDE,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKzB,KAAL,CAAWG,OAAX,KAAuB,IAA3B,EAAgC;AAC5B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;AACD,WACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKkB,aAAL,EADL,CADJ,CADJ;AAOH;;AA7DgD","sourcesContent":["import React, { Component } from 'react';\nimport Tiles from '../Components/Tiles'\nimport '../App.css'\nimport friendly1 from '../Assets/Friendly1.png'\nimport friendlySad from '../Assets/FriendlySad.png'\n\n\n\nexport default class LevelContainer extends Component{\n\n    //refactor later to use a switch statement to run through these functions based on which level is selected\n\n    state = {\n        selectedLevel: this.props.selectedLevel,\n        targets: [{name: 'one', target_type: 'debris'},{name: 'two', target_type: 'debris'},{name: 'three', target_type: 'debris'},{name: 'four', target_type: 'friendly'}],\n        counter: 0\n        // tiles: [{name: 'one'},{name: 'two'},{name: 'three'},{name: 'four'},{name: 'five'},{name: 'six'},{name: 'seven'},{name: 'eight'},{name: 'nine'},{name: 'ten'},{name: 'eleven'},{name: 'twelve'}]\n    }\n    \n    componentDidMount = () => {\n        this.interval = setInterval(() =>{\n            this.loadLevelOneGrid()\n        }, 2000)    \n    }\n   \n\n    //figure out randomization and then looping\n  \n    loadLevelOneGrid = () => {\n        l\n        this.setState({\n            targets: this.shuffleGrid(...this.state.targets)\n        })\n    }\n\n    // loadLevelOne = () => {\n    //    let targets = this.loadLevelOneGrid()\n    //    this.setState({\n    //        targets: targets\n    //    })\n    // }\n    \n    shuffleGrid = (array) => {\n        let currentIndex = array.length, temp, random;\n        while(0 !== currentIndex){\n            random = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            temp = array[currentIndex];\n            array[currentIndex] = array[random];\n            array[random] = temp;\n        }\n        return array\n    }\n\n    renderTargets = () => {\n        return this.state.targets.map((tile, i) => <Tiles key={i}{...tile}/>)\n    }\n\n    render() {\n        if (this.state.targets === null){\n            return <h1>LOADING!</h1>\n        }\n        return (\n            <div className='tile-grid-container'>\n                <div className='tile-grid'>\n                    {this.renderTargets()}\n                </div>\n            </div>\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}