{"ast":null,"code":"var _jsxFileName = \"/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Containers/LevelContainer.js\";\nimport React, { Component } from 'react';\nimport Tiles from '../Components/Tiles';\nimport '../App.css';\nexport default class LevelContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedLevel: this.props.selectedLevel,\n      targets: [{\n        name: 'one',\n        target_type: 'debris',\n        isClicked: false\n      }, {\n        name: 'two',\n        target_type: 'debris',\n        isClicked: false\n      }, {\n        name: 'three',\n        target_type: 'debris',\n        isClicked: false\n      }, {\n        name: 'four',\n        target_type: 'friendly',\n        isClicked: false\n      }],\n      counter: 0,\n      isClicked: false\n    };\n\n    this.handleClick = name => {\n      let thisTarget = this.state.targets.find(target => target.name === name);\n      thisTarget.isClicked = true;\n      this.setState({\n        isClicked: true\n      });\n      console.log(this.state.targets);\n    };\n\n    this.componentDidMount = () => {\n      this.interval = setInterval(() => {\n        this.loadLevelOneGrid();\n      }, 2000);\n    };\n\n    this.loadLevelOneGrid = () => {\n      this.setState({\n        targets: this.shuffleGrid(this.state.targets)\n      });\n    };\n\n    this.shuffleGrid = array => {\n      let currentIndex = array.length,\n          temp,\n          random;\n\n      while (0 !== currentIndex) {\n        random = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temp = array[currentIndex];\n        array[currentIndex] = array[random];\n        array[random] = temp;\n      }\n\n      return array;\n    };\n\n    this.renderTargets = () => {\n      return this.state.targets.map((tile, i) => React.createElement(Tiles, Object.assign({\n        handleClick: this.handleClick,\n        key: i\n      }, tile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })));\n    };\n  }\n\n  render() {\n    if (this.state.targets === null) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"LOADING!\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"tile-grid-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tile-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.renderTargets()));\n  }\n\n}","map":{"version":3,"sources":["/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Containers/LevelContainer.js"],"names":["React","Component","Tiles","LevelContainer","state","selectedLevel","props","targets","name","target_type","isClicked","counter","handleClick","thisTarget","find","target","setState","console","log","componentDidMount","interval","setInterval","loadLevelOneGrid","shuffleGrid","array","currentIndex","length","temp","random","Math","floor","renderTargets","map","tile","i","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,YAAP;AAIA,eAAe,MAAMC,cAAN,SAA6BF,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAIjDG,KAJiD,GAIzC;AACJC,MAAAA,aAAa,EAAE,KAAKC,KAAL,CAAWD,aADtB;AAGJE,MAAAA,OAAO,EAAE,CAAC;AAACC,QAAAA,IAAI,EAAE,KAAP;AAAcC,QAAAA,WAAW,EAAE,QAA3B;AAAqCC,QAAAA,SAAS,EAAE;AAAhD,OAAD,EAAwD;AAACF,QAAAA,IAAI,EAAE,KAAP;AAAcC,QAAAA,WAAW,EAAE,QAA3B;AAAqCC,QAAAA,SAAS,EAAE;AAAhD,OAAxD,EACT;AAACF,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,WAAW,EAAE,QAA7B;AAAuCC,QAAAA,SAAS,EAAE;AAAlD,OADS,EACgD;AAACF,QAAAA,IAAI,EAAE,MAAP;AAAeC,QAAAA,WAAW,EAAE,UAA5B;AAAwCC,QAAAA,SAAS,EAAE;AAAnD,OADhD,CAHL;AAMJC,MAAAA,OAAO,EAAE,CANL;AAOJD,MAAAA,SAAS,EAAE;AAPP,KAJyC;;AAAA,SAcjDE,WAdiD,GAclCJ,IAAD,IAAU;AACpB,UAAIK,UAAU,GAAG,KAAKT,KAAL,CAAWG,OAAX,CAAmBO,IAAnB,CAAwBC,MAAM,IAAIA,MAAM,CAACP,IAAP,KAAgBA,IAAlD,CAAjB;AACAK,MAAAA,UAAU,CAACH,SAAX,GAAuB,IAAvB;AACA,WAAKM,QAAL,CAAc;AACVN,QAAAA,SAAS,EAAE;AADD,OAAd;AAGAO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWG,OAAvB;AACH,KArBgD;;AAAA,SAuBjDY,iBAvBiD,GAuB7B,MAAM;AAEtB,WAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAK;AAC7B,aAAKC,gBAAL;AACH,OAF0B,EAExB,IAFwB,CAA3B;AAIH,KA7BgD;;AAAA,SA+BjDA,gBA/BiD,GA+B9B,MAAM;AACrB,WAAKN,QAAL,CAAc;AACVT,QAAAA,OAAO,EAAE,KAAKgB,WAAL,CAAiB,KAAKnB,KAAL,CAAWG,OAA5B;AADC,OAAd;AAGH,KAnCgD;;AAAA,SAqCjDgB,WArCiD,GAqClCC,KAAD,IAAW;AACrB,UAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,UAAiCC,IAAjC;AAAA,UAAuCC,MAAvC;;AACA,aAAM,MAAMH,YAAZ,EAAyB;AACrBG,QAAAA,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBH,YAA3B,CAAT;AACAA,QAAAA,YAAY,IAAI,CAAhB;AACAE,QAAAA,IAAI,GAAGH,KAAK,CAACC,YAAD,CAAZ;AACAD,QAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,MAAD,CAA3B;AACAJ,QAAAA,KAAK,CAACI,MAAD,CAAL,GAAgBD,IAAhB;AACH;;AACD,aAAOH,KAAP;AACH,KA/CgD;;AAAA,SAiDjDO,aAjDiD,GAiDjC,MAAM;AAClB,aAAO,KAAK3B,KAAL,CAAWG,OAAX,CAAmByB,GAAnB,CAAuB,CAACC,IAAD,EAAOC,CAAP,KAAa,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAE,KAAKtB,WAAzB;AAAsC,QAAA,GAAG,EAAEsB;AAA3C,SAAiDD,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAApC,CAAP;AACH,KAnDgD;AAAA;;AAqDjDE,EAAAA,MAAM,GAAG;AACL,QAAI,KAAK/B,KAAL,CAAWG,OAAX,KAAuB,IAA3B,EAAgC;AAC5B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;AACD,WACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKwB,aAAL,EADL,CADJ,CADJ;AAOH;;AAhEgD","sourcesContent":["import React, { Component } from 'react';\nimport Tiles from '../Components/Tiles'\nimport '../App.css'\n\n\n\nexport default class LevelContainer extends Component{\n\n    //refactor later to use a switch statement to run through these functions based on which level is selected\n\n    state = {\n        selectedLevel: this.props.selectedLevel,\n\n        targets: [{name: 'one', target_type: 'debris', isClicked: false},{name: 'two', target_type: 'debris', isClicked: false},\n        {name: 'three', target_type: 'debris', isClicked: false},{name: 'four', target_type: 'friendly', isClicked: false}],\n\n        counter: 0,\n        isClicked: false\n    }\n\n    handleClick = (name) => {\n        let thisTarget = this.state.targets.find(target => target.name === name)\n        thisTarget.isClicked = true\n        this.setState({\n            isClicked: true\n        })\n        console.log(this.state.targets)\n    }\n    \n    componentDidMount = () => {\n        \n        this.interval = setInterval(() =>{\n            this.loadLevelOneGrid()\n        }, 2000)    \n\n    }\n  \n    loadLevelOneGrid = () => {\n        this.setState({\n            targets: this.shuffleGrid(this.state.targets)\n        })\n    }\n    \n    shuffleGrid = (array) => {\n        let currentIndex = array.length, temp, random;\n        while(0 !== currentIndex){\n            random = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            temp = array[currentIndex];\n            array[currentIndex] = array[random];\n            array[random] = temp;\n        }\n        return array\n    }\n\n    renderTargets = () => {\n        return this.state.targets.map((tile, i) => <Tiles handleClick={this.handleClick} key={i}{...tile}/>)\n    }\n\n    render() {\n        if (this.state.targets === null){\n            return <h1>LOADING!</h1>\n        }\n        return (\n            <div className='tile-grid-container'>\n                <div className='tile-grid'>\n                    {this.renderTargets()}\n                </div>\n            </div>\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}