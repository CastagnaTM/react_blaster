{"ast":null,"code":"var _jsxFileName = \"/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Components/LevelEnd.js\";\nimport React, { Component } from 'react';\nlet highscores;\nexport default class LevelEnd extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gameEnd: false,\n      highscores: null,\n      name: '',\n      score: null,\n      show: false,\n      scoresView: false\n    };\n\n    this.componentDidMount = () => {\n      if (this.props.success) {\n        this.setCurrentScore();\n        this.getHighscores();\n      }\n    };\n\n    this.handleReturn = () => {\n      this.props.levelComplete(this.props.success, this.props.levelPoints, this.props.health);\n    };\n\n    this.displayHighscores = () => {\n      let allHighscores = this.state.highscores.sort((a, b) => a.score < b.score ? 1 : -1);\n      highscores = allHighscores.slice(0, 5);\n      return highscores.map(score => React.createElement(\"li\", {\n        className: \"text\",\n        style: {\n          marginLeft: '34%',\n          padding: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, score.name, \" . . . \", score.score));\n    };\n\n    this.setCurrentScore = () => {\n      this.setState({\n        score: this.props.levelPoints + this.props.totalPoints\n      });\n    };\n\n    this.getHighscores = () => {\n      fetch('http://localhost:3000/users').then(resp => resp.json()).then(data => {\n        this.setState({\n          highscores: data\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleHighScores = event => {\n      event.preventDefault();\n      fetch('http://localhost:3000/highscore', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Accept': \"application/json\"\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          score: this.state.score + 110\n        })\n      }).then(resp => resp.json()).then(data => {\n        if (data.errors) {\n          alert(data.errors);\n        }\n      });\n      this.setState({\n        show: true,\n        name: this.state.name,\n        score: this.state.score + 100\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"level-end-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"level-end-grid\",\n      style: {\n        display: this.props.scoresView ? 'none' : 'block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text\",\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.props.success ? \"Congrats! You Scored \".concat(this.props.levelPoints, \" Points!\") : 'Sorry, you lost this time around...'), React.createElement(\"p\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.props.gameComplete ? \"You Beat The Game With \".concat(this.state.score, \" Points! Enter Your Name Below:\") : null)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        display: this.props.gameComplete ? 'none' : 'block'\n      },\n      className: \"hvr-ripple-out\",\n      onClick: this.handleReturn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Return\"))), React.createElement(\"div\", {\n      className: \"highscores-container\",\n      style: {\n        display: this.props.gameComplete ? 'block' : 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text\",\n      style: {\n        marginLeft: '40%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"High Scores\"), React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.handleHighScores,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      placeholder: \"Name...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"scores-button\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"text\",\n      style: {\n        marginLeft: '34%',\n        padding: '1%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \" \", this.state.name, \" ... \", this.state.score), this.state.highscores ? this.displayHighscores() : null)));\n  }\n\n}","map":{"version":3,"sources":["/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Components/LevelEnd.js"],"names":["React","Component","highscores","LevelEnd","state","gameEnd","name","score","show","scoresView","componentDidMount","props","success","setCurrentScore","getHighscores","handleReturn","levelComplete","levelPoints","health","displayHighscores","allHighscores","sort","a","b","slice","map","marginLeft","padding","setState","totalPoints","fetch","then","resp","json","data","handleChange","event","target","value","handleHighScores","preventDefault","method","headers","body","JSON","stringify","errors","alert","render","display","textAlign","gameComplete"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nlet highscores;\n\nexport default class LevelEnd extends Component {\n\n    state = {\n        gameEnd: false,\n        highscores: null,\n        name: '',\n        score: null,\n        show: false,\n        scoresView: false\n    }\n\n    componentDidMount = () => {\n        if(this.props.success){\n            this.setCurrentScore()\n            this.getHighscores()\n        }\n        \n    }\n\n    handleReturn = () => {\n        this.props.levelComplete(this.props.success, this.props.levelPoints, this.props.health)\n    }\n\n    displayHighscores = () => { \n        let allHighscores = this.state.highscores.sort((a,b) => a.score < b.score ? 1 : -1)\n        highscores = allHighscores.slice(0,5)\n        return( highscores.map(score => <li className='text' style={{marginLeft: '34%', padding: '1%'}}>{score.name} . . . {score.score}</li>) )\n    }\n\n    setCurrentScore = () => {\n        this.setState({\n            score: this.props.levelPoints + this.props.totalPoints\n        })\n    }\n\n    getHighscores = () => {\n        fetch('http://localhost:3000/users')\n        .then(resp => resp.json())\n        .then(data => {\n            this.setState({\n                highscores: data\n            })\n        })\n    }\n\n    handleChange = (event) => {\n        this.setState({\n          [event.target.name]: event.target.value\n        })\n    }\n\n    handleHighScores = (event) => {\n        event.preventDefault()\n        fetch('http://localhost:3000/highscore',{\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': \"application/json\"\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                score: this.state.score+110 \n                })\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            if (data.errors){\n                alert(data.errors)\n            }\n        })\n        this.setState({\n            show: true,\n            name: this.state.name,\n            score: this.state.score+100 \n        })\n    }\n\n    render(){\n        return(\n            <div className='level-end-container'>\n                <div className='level-end-grid' style={{display: this.props.scoresView ? 'none' : 'block'}}>\n                    <div>\n                        <p className='text' style={{textAlign: 'center'}}>\n                            {this.props.success ? `Congrats! You Scored ${this.props.levelPoints} Points!` : 'Sorry, you lost this time around...'}\n                        </p>\n                        <p className='text'>\n                        {this.props.gameComplete ? `You Beat The Game With ${this.state.score} Points! Enter Your Name Below:` : null}\n                        </p>\n                    </div>\n                    <div>\n                        <button style={{display: this.props.gameComplete ? 'none' : 'block'}}className='hvr-ripple-out' onClick={this.handleReturn}>Return</button>\n                    </div>\n                </div>\n                <div className='highscores-container' style={{display: this.props.gameComplete ? 'block' : 'none'}}>\n                    <h4 className='text' style={{marginLeft: '40%'}}>High Scores</h4>\n                    <form className=\"form\" onSubmit={this.handleHighScores}>\n                        <input className=\"input\" name=\"name\" value={this.state.name} onChange={this.handleChange} placeholder=\"Name...\" />\n                        <button className='scores-button' type=\"submit\">Submit</button>\n                    </form>\n                    <ul>\n                        <li className='text' style={{marginLeft: '34%', padding: '1%', }}> {this.state.name} ... {this.state.score}</li>\n                        {this.state.highscores ? this.displayHighscores() : null}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}