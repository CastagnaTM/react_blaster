{"ast":null,"code":"import React, { Component } from 'react';\nimport Tiles from '../Components/Tiles';\nimport '../App.css';\nimport friendly1 from '../Assets/Friendly1.png';\nimport friendlySad from '../Assets/FriendlySad.png';\nexport default class LevelContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedLevel: this.props.selectedLevel,\n      targets: null // tiles: [{name: 'one'},{name: 'two'},{name: 'three'},{name: 'four'},{name: 'five'},{name: 'six'},{name: 'seven'},{name: 'eight'},{name: 'nine'},{name: 'ten'},{name: 'eleven'},{name: 'twelve'}]\n\n    };\n\n    this.loadLevelOneGrid = () => {\n      let targets = [{\n        target_type: 'debris'\n      }, {\n        target_type: 'debris'\n      }, {\n        target_type: 'debris'\n      }, {\n        target_type: 'friendly'\n      }];\n      return targets;\n    };\n\n    this.loadLevelOne = () => {\n      let targets = this.loadLevelOneGrid();\n      targets = this.shuffleGrid(targets);\n      this.setState({\n        targets: targets\n      });\n    };\n\n    this.shuffleGrid = array => {\n      //Fisher-Yates shuffle\n      for (let i = array.length - 1; i > 0; i--) {\n        var _ref = [array[Math.floor(Math.random() * (i + 1))], array[i]];\n        array[i] = _ref[0];\n        array[Math.floor(Math.random() * (i + 1))] = _ref[1];\n      }\n\n      return array;\n    };\n  }\n\n  render() {\n    return this.loadLevelOne();\n  }\n\n}","map":{"version":3,"sources":["/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Containers/LevelContainer.js"],"names":["React","Component","Tiles","friendly1","friendlySad","LevelContainer","state","selectedLevel","props","targets","loadLevelOneGrid","target_type","loadLevelOne","shuffleGrid","setState","array","i","length","Math","floor","random","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAIA,eAAe,MAAMC,cAAN,SAA6BJ,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAEjDK,KAFiD,GAEzC;AACJC,MAAAA,aAAa,EAAE,KAAKC,KAAL,CAAWD,aADtB;AAEJE,MAAAA,OAAO,EAAE,IAFL,CAGJ;;AAHI,KAFyC;;AAAA,SAUjDC,gBAViD,GAU9B,MAAM;AACrB,UAAID,OAAO,GAAG,CAAC;AAACE,QAAAA,WAAW,EAAE;AAAd,OAAD,EAAyB;AAACA,QAAAA,WAAW,EAAE;AAAd,OAAzB,EAAiD;AAACA,QAAAA,WAAW,EAAE;AAAd,OAAjD,EAAyE;AAACA,QAAAA,WAAW,EAAE;AAAd,OAAzE,CAAd;AACA,aAAOF,OAAP;AACH,KAbgD;;AAAA,SAejDG,YAfiD,GAelC,MAAM;AAClB,UAAIH,OAAO,GAAG,KAAKC,gBAAL,EAAd;AACAD,MAAAA,OAAO,GAAG,KAAKI,WAAL,CAAiBJ,OAAjB,CAAV;AACA,WAAKK,QAAL,CAAc;AACVL,QAAAA,OAAO,EAAEA;AADC,OAAd;AAIF,KAtBgD;;AAAA,SA4BjDI,WA5BiD,GA4BlCE,KAAD,IAAW;AACrB;AACA,WAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAa,CAA1B,EAA6BD,CAAC,GAAG,CAAjC,EAAoCA,CAAC,EAArC,EAAwC;AAAA,mBACmB,CAACD,KAAK,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,CAAC,GAAC,CAAnB,CAAX,CAAD,CAAN,EAA2CD,KAAK,CAACC,CAAD,CAAhD,CADnB;AACnCD,QAAAA,KAAK,CAACC,CAAD,CAD8B;AACzBD,QAAAA,KAAK,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,CAAC,GAAC,CAAnB,CAAX,CAAD,CADoB;AAEvC;;AACD,aAAOD,KAAP;AACH,KAlCgD;AAAA;;AAoCjDM,EAAAA,MAAM,GAAG;AACL,WACI,KAAKT,YAAL,EADJ;AAGH;;AAxCgD","sourcesContent":["import React, { Component } from 'react';\nimport Tiles from '../Components/Tiles'\nimport '../App.css'\nimport friendly1 from '../Assets/Friendly1.png'\nimport friendlySad from '../Assets/FriendlySad.png'\n\n\n\nexport default class LevelContainer extends Component{\n\n    state = {\n        selectedLevel: this.props.selectedLevel,\n        targets: null\n        // tiles: [{name: 'one'},{name: 'two'},{name: 'three'},{name: 'four'},{name: 'five'},{name: 'six'},{name: 'seven'},{name: 'eight'},{name: 'nine'},{name: 'ten'},{name: 'eleven'},{name: 'twelve'}]\n    }\n    \n\n    //figure out randomization and then looping\n    loadLevelOneGrid = () => {\n        let targets = [{target_type: 'debris'},{target_type: 'debris'},{target_type: 'debris'},{target_type: 'friendly'}]\n        return targets\n    }\n\n    loadLevelOne = () => {\n       let targets = this.loadLevelOneGrid()\n       targets = this.shuffleGrid(targets)\n       this.setState({\n           targets: targets\n       })\n\n    }\n    // levelInterval = () => {\n    //    let myInt = setInterval(this.loadLevelOne(), 1000)\n    //    return myInt\n    // }\n\n    shuffleGrid = (array) => {\n        //Fisher-Yates shuffle\n        for (let i = array.length-1; i > 0; i--){\n            [array[i], array[Math.floor(Math.random() * (i+1))]] = [array[Math.floor(Math.random() * (i+1))], array[i]]\n        }\n        return array\n    }\n\n    render() {\n        return(\n            this.loadLevelOne()\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}