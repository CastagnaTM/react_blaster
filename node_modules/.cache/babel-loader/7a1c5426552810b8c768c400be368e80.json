{"ast":null,"code":"var _jsxFileName = \"/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Components/LevelEnd.js\";\nimport React, { Component } from 'react';\nimport BossIntro from './BossIntro';\nlet highscores;\nexport default class LevelEnd extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gameEnd: false,\n      highscores: null,\n      name: '',\n      score: null,\n      showBossIntro: false,\n      currentWinner: null,\n      scoresIndex: 0,\n      showForm: true\n    };\n\n    this.componentDidMount = () => {\n      if (this.props.success) {\n        this.setCurrentScore();\n        this.getHighscores();\n      }\n    };\n\n    this.handleReturn = newGame => {\n      this.pr;\n      this.props.levelComplete(this.props.success, this.props.levelPoints, this.props.health, newGame === false ? false : true);\n    };\n\n    this.handleBossIntro = () => {\n      this.setState({\n        showBossIntro: true\n      });\n    };\n\n    this.displayHighscores = () => {\n      let index = this.state.scoresIndex;\n      let allHighscores = this.state.highscores;\n\n      if (this.state.currentWinner !== null && !allHighscores.includes(this.state.currentWinner)) {\n        allHighscores.push(this.state.currentWinner);\n      }\n\n      allHighscores.sort((a, b) => a.score < b.score ? 1 : -1);\n      highscores = allHighscores.slice(index, index + 5);\n      return highscores.map(score => React.createElement(\"li\", {\n        key: score.id,\n        className: \"text\",\n        style: {\n          marginLeft: '34%',\n          padding: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, score.name, \" . . . \", score.score));\n    };\n\n    this.setCurrentScore = () => {\n      this.setState({\n        score: this.props.levelPoints + this.props.totalPoints\n      });\n    };\n\n    this.getHighscores = () => {\n      fetch('http://localhost:3000/users').then(resp => resp.json()).then(data => {\n        this.setState({\n          highscores: data.sort((a, b) => a.score < b.score ? 1 : -1)\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleHighScores = event => {\n      event.preventDefault();\n      fetch('http://localhost:3000/highscore', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Accept': \"application/json\"\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          score: this.state.score\n        })\n      }).then(resp => resp.json()).then(data => {\n        if (data.errors) {\n          alert(data.errors);\n        }\n      });\n      this.setState({\n        showForm: false,\n        name: this.state.name,\n        score: this.state.score,\n        currentWinner: {\n          name: this.state.name,\n          score: this.state.score\n        }\n      });\n    };\n\n    this.moreScores = () => {\n      //some sort of conditional to check the length of the scores array\n      console.log(this.state.highscores[this.state.scoresIndex + 6]);\n\n      if (this.state.highscores[this.state.scoresIndex + 6]) {\n        this.setState({\n          scoresIndex: this.state.scoresIndex + 5\n        });\n      } else {\n        this.setState({\n          scoresIndex: 0\n        });\n      }\n    };\n  }\n\n  render() {\n    if (this.state.showBossIntro === true) {\n      return React.createElement(BossIntro, {\n        health: this.props.health,\n        success: this.props.success,\n        levelPoints: this.props.levelPoints,\n        levelComplete: this.props.levelComplete,\n        handleReturn: this.handleReturn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: \"level-end-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"level-end-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text\",\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, this.props.success ? \"Congrats! You Scored \".concat(this.props.levelPoints, \" Points!\") : 'Sorry, you lost this time around...'), React.createElement(\"p\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, this.props.gameComplete ? \"You Beat The Game With \".concat(this.state.score, \" Points!\") : null), React.createElement(\"p\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, this.props.gameComplete ? \"Enter Your Name Below:\" : null)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          display: this.props.gameComplete ? 'none' : 'block'\n        },\n        className: \"hvr-ripple-out\",\n        onClick: this.props.levelName === 'Level Three' && this.props.success ? this.handleBossIntro : () => this.handleReturn(false),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Continue\"), React.createElement(\"button\", {\n        style: {\n          display: this.props.gameComplete ? 'block' : 'none'\n        },\n        className: \"hvr-ripple-out\",\n        onClick: () => this.handleReturn(true),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Play Again?\"))), React.createElement(\"div\", {\n        className: \"highscores-container\",\n        style: {\n          display: this.props.gameComplete ? 'block' : 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"text\",\n        style: {\n          marginLeft: '40%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"High Scores\"), React.createElement(\"form\", {\n        className: \"form\",\n        onSubmit: this.handleHighScores,\n        style: {\n          display: this.state.showForm ? 'block' : 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"input\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        placeholder: \"Name...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"scores-button\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, this.state.highscores ? this.displayHighscores() : null), React.createElement(\"button\", {\n        className: \"more-button\",\n        onClick: () => this.moreScores(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"More\")));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Components/LevelEnd.js"],"names":["React","Component","BossIntro","highscores","LevelEnd","state","gameEnd","name","score","showBossIntro","currentWinner","scoresIndex","showForm","componentDidMount","props","success","setCurrentScore","getHighscores","handleReturn","newGame","pr","levelComplete","levelPoints","health","handleBossIntro","setState","displayHighscores","index","allHighscores","includes","push","sort","a","b","slice","map","id","marginLeft","padding","totalPoints","fetch","then","resp","json","data","handleChange","event","target","value","handleHighScores","preventDefault","method","headers","body","JSON","stringify","errors","alert","moreScores","console","log","render","textAlign","gameComplete","display","levelName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport BossIntro from './BossIntro'\n\nlet highscores;\n\nexport default class LevelEnd extends Component {\n\n    state = {\n        gameEnd: false,\n        highscores: null,\n        name: '',\n        score: null,\n        showBossIntro: false,\n        currentWinner: null,\n        scoresIndex: 0,\n        showForm: true\n    }\n\n    componentDidMount = () => {\n        \n        if(this.props.success){\n            this.setCurrentScore()\n            this.getHighscores()\n        }\n    }\n\n    handleReturn = (newGame) => {\n        this.pr\n        this.props.levelComplete(this.props.success, this.props.levelPoints, this.props.health, newGame === false ? false : true)\n    }\n\n    handleBossIntro = () => {\n        this.setState({\n            showBossIntro: true\n        })\n    }\n\n    displayHighscores = () => {\n        let index = this.state.scoresIndex;\n        let allHighscores = this.state.highscores\n        if(this.state.currentWinner !== null && !allHighscores.includes(this.state.currentWinner)){\n            allHighscores.push(this.state.currentWinner)\n        }\n        allHighscores.sort((a,b) => a.score < b.score ? 1 : -1)\n        highscores = allHighscores.slice(index,index+5)\n        return( highscores.map(score => <li key={score.id} className='text' style={{marginLeft: '34%', padding: '1%'}}>{score.name} . . . {score.score}</li>) )\n    }\n\n    setCurrentScore = () => {\n        this.setState({\n            score: this.props.levelPoints + this.props.totalPoints\n        })\n    }\n\n    getHighscores = () => {\n        fetch('http://localhost:3000/users')\n        .then(resp => resp.json())\n        .then(data => {\n            this.setState({\n                highscores: data.sort((a,b) => a.score < b.score ? 1 : -1)\n            })\n        })\n    }\n\n    handleChange = (event) => {\n        this.setState({\n          [event.target.name]: event.target.value\n        })\n    }\n\n    handleHighScores = (event) => {\n        event.preventDefault()\n        fetch('http://localhost:3000/highscore',{\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': \"application/json\"\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                score: this.state.score\n                })\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            if (data.errors){\n                alert(data.errors)\n            }\n        })\n        this.setState({\n            showForm: false,\n            name: this.state.name,\n            score: this.state.score,\n            currentWinner: {name: this.state.name, score: this.state.score}\n        })\n    }\n\n    moreScores = () => {\n        //some sort of conditional to check the length of the scores array\n        console.log(this.state.highscores[this.state.scoresIndex + 6])\n        if(this.state.highscores[this.state.scoresIndex + 6]){\n            this.setState({\n                scoresIndex: this.state.scoresIndex + 5\n            })\n        }\n        else{\n            this.setState({\n                scoresIndex: 0\n            }) \n        }\n    }\n\n    render(){\n        if(this.state.showBossIntro === true){\n            return(\n                <BossIntro\n                    health={this.props.health} \n                    success={this.props.success}\n                    levelPoints={this.props.levelPoints}\n                    levelComplete={this.props.levelComplete}\n                    handleReturn={this.handleReturn} \n                />\n            )\n        }\n        else{\n            return(\n                <div className='level-end-container'>\n                    <div className='level-end-grid'>\n                        <div>\n                            <p className='text' style={{textAlign: 'center'}}>\n                                {this.props.success ? `Congrats! You Scored ${this.props.levelPoints} Points!` : 'Sorry, you lost this time around...'}\n                            </p>\n                            <p className='text'>\n                            {this.props.gameComplete ? `You Beat The Game With ${this.state.score} Points!` : null}\n                            </p>\n                            <p className='text'>\n                            {this.props.gameComplete ? `Enter Your Name Below:` : null}\n                            </p>\n                        </div>\n                        <div>\n                            <button style={{display: this.props.gameComplete ? 'none' : 'block'}}\n                            className='hvr-ripple-out' \n                            onClick={this.props.levelName === 'Level Three' && this.props.success ? this.handleBossIntro : () => this.handleReturn(false)}>Continue\n                            </button>\n                            <button style={{display: this.props.gameComplete ? 'block' : 'none'}}\n                            className='hvr-ripple-out' \n                            onClick={() => this.handleReturn(true)}>Play Again?\n                            </button>\n                        </div>\n                    </div>\n                    <div className='highscores-container' style={{display: this.props.gameComplete ? 'block' : 'none'}}>\n                        <h4 className='text' style={{marginLeft: '40%'}}>High Scores</h4>\n                        <form className=\"form\" onSubmit={this.handleHighScores} style={{display: this.state.showForm ? 'block' : 'none'}}>\n                            <input className=\"input\" name=\"name\" value={this.state.name} onChange={this.handleChange} placeholder=\"Name...\" />\n                            <button className='scores-button' type=\"submit\">Submit</button>\n                        </form>\n                        <ul>\n                            {this.state.highscores ? this.displayHighscores() : null}\n                        </ul>\n                        <button className='more-button' onClick={() => this.moreScores()}>More</button>\n                    </div>\n                </div>\n            )\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}