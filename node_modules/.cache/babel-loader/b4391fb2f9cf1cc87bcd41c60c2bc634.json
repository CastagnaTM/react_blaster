{"ast":null,"code":"var _jsxFileName = \"/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Components/HomeScreen.js\";\nimport React, { Component } from 'react';\nimport LevelContainer from '../Containers/LevelContainer';\nimport LevelSelector from './LevelSelector';\nimport Shoppe from './Shoppe';\nimport friendlySmall from '../Assets/FriendlySmall.png';\nimport satelliteIcon from '../Assets/SatelliteIcon.png';\nimport BombIcon from '../Assets/BombIcon.png';\nimport ShoppeIcon from '../Assets/ShoppeIcon.png'; //this component holds the homescreen, including level selection and potentially other options\n\nexport default class HomeScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playLevel: false,\n      levels: [],\n      selectedLevel: null,\n      totalPoints: 0,\n      playedOnce: false,\n      health: 4,\n      levelsCompleted: 0,\n      shoppeView: false\n    };\n\n    this.componentDidMount = () => {\n      this.getLevels();\n    };\n\n    this.getLevelButtons = () => {\n      let buttonArray = this.state.levels.map((level, i) => React.createElement(LevelSelector, Object.assign({\n        key: i\n      }, level, {\n        loadLevel: this.loadLevel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n      return buttonArray[this.state.levelsCompleted];\n    };\n\n    this.handleShoppe = () => {\n      this.setState({\n        shoppeView: true\n      });\n    };\n\n    this.loadShoppe = () => {\n      return React.createElement(Shoppe, {\n        points: this.state.totalPoints,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    };\n\n    this.levelSelect = () => {\n      return React.createElement(\"div\", {\n        className: \"home-screen-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"home-screen-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Select A Level\"), React.createElement(\"p\", {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.playedOnce ? \"New Total Score: \".concat(this.state.totalPoints) : \"Total Score: \".concat(this.state.totalPoints)), React.createElement(\"p\", {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Health: \", this.state.health)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleShoppe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: ShoppeIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"home-screen-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"level-select-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"level-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.getLevelButtons())), React.createElement(\"div\", {\n        className: \"instructions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"lines\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Instructions\"), React.createElement(\"p\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"You Have 30 seconds to:\"), React.createElement(\"div\", {\n        className: \"instructions-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"stikes-img\",\n        src: satelliteIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Shoot These\")), React.createElement(\"div\", {\n        className: \"instructions-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"stikes-img\",\n        src: friendlySmall,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"But Not These\")), React.createElement(\"div\", {\n        className: \"instructions-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"stikes-img\",\n        src: BombIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Shoot These If You Want, But It's A Bad Idea\"))))));\n    };\n\n    this.loadLevel = info => {\n      let obj = info;\n      this.setState({\n        selectedLevel: obj,\n        playLevel: true\n      });\n    };\n\n    this.getLevels = () => {\n      fetch('http://localhost:3000/levels').then(resp => resp.json()).then(data => {\n        this.setState({\n          levels: data\n        });\n      });\n    };\n\n    this.play = () => {\n      return React.createElement(LevelContainer, {\n        health: this.state.health,\n        selectedLevel: this.state.selectedLevel,\n        levelComplete: this.levelComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      });\n    };\n\n    this.levelComplete = (completed, levelPoints, health) => {\n      if (completed === true) {\n        this.setState({\n          totalPoints: this.state.totalPoints + levelPoints,\n          health: health,\n          playedOnce: true,\n          levelsCompleted: this.state.levelsCompleted + 1\n        });\n      }\n\n      this.setState({\n        playLevel: false\n      });\n    };\n  }\n\n  render() {\n    //until a level is selected, show the levels avaiable\n    if (this.state.playLevel === false && this.state.shoppeView === false) {\n      return this.levelSelect();\n    } //after selected a level, render the level\n    else if (this.state.playLevel === true && this.state.shoppeView === false) {\n        return this.play();\n      } else if (this.state.shoppeView === true && this.state.playLevel === false) {\n        return this.loadShoppe();\n      }\n  }\n\n}","map":{"version":3,"sources":["/Users/tomcastagna/Development/code/mod_five/Project/space_friends/src/Components/HomeScreen.js"],"names":["React","Component","LevelContainer","LevelSelector","Shoppe","friendlySmall","satelliteIcon","BombIcon","ShoppeIcon","HomeScreen","state","playLevel","levels","selectedLevel","totalPoints","playedOnce","health","levelsCompleted","shoppeView","componentDidMount","getLevels","getLevelButtons","buttonArray","map","level","i","loadLevel","handleShoppe","setState","loadShoppe","levelSelect","color","info","obj","fetch","then","resp","json","data","play","levelComplete","completed","levelPoints","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport LevelContainer from '../Containers/LevelContainer'\nimport LevelSelector from './LevelSelector'\nimport Shoppe from './Shoppe'\nimport friendlySmall from '../Assets/FriendlySmall.png'\nimport satelliteIcon from '../Assets/SatelliteIcon.png'\nimport BombIcon from '../Assets/BombIcon.png'\nimport ShoppeIcon from '../Assets/ShoppeIcon.png'\n\n\n//this component holds the homescreen, including level selection and potentially other options\n\nexport default class HomeScreen extends Component{\n\n    state = {\n        playLevel: false,\n        levels: [],\n        selectedLevel: null,\n        totalPoints: 0,\n        playedOnce: false,\n        health: 4,\n        levelsCompleted: 0,\n        shoppeView: false\n    }\n\n    //calls the fetch to load level options\n    componentDidMount = () => {\n        this.getLevels()\n    }\n\n    //renders buttons for each load-able level\n    //add abiltity to load different difficulties with different formats\n    //also hide levels that haven't been unlocked yet\n\n    getLevelButtons = () => {\n       let buttonArray = this.state.levels.map((level, i) => <LevelSelector key={i}{...level} \n        loadLevel={this.loadLevel}\n        />)\n        return buttonArray[this.state.levelsCompleted]\n    }\n    \n    handleShoppe = () => {\n        this.setState({\n            shoppeView: true\n        })\n    }\n\n    loadShoppe = () => {\n        return(\n            <Shoppe points={this.state.totalPoints} />\n        )    \n    }\n    levelSelect = () => {\n        return(\n            <div className='home-screen-background'>\n                <div className='home-screen-header'>\n                    <h4 style={{color: 'white'}}>Select A Level</h4>\n                    <p style={{color: 'white'}}>{this.state.playedOnce ? `New Total Score: ${this.state.totalPoints}` : `Total Score: ${this.state.totalPoints}`}</p>\n                    <p style={{color: 'white'}}>Health: {this.state.health}</p>\n                </div>\n                <div>\n                    <button \n                        onClick={this.handleShoppe}>\n                        <img src={ShoppeIcon}/>\n                    </button>\n                </div>\n                <div className='home-screen-column'>\n                    <div className='level-select-container'>\n                        <div className='level-select'>\n                            {this.getLevelButtons()}\n                        </div>\n                    </div>\n                    <div className='instructions'>\n                        <div className='lines'>\n                            <h3 className='text'>Instructions</h3>\n                            <p className='text'>You Have 30 seconds to:</p>\n                            <div className='instructions-icons'>\n                                <img className='stikes-img' src={satelliteIcon}></img>\n                                <p className='text'>Shoot These</p>\n                            </div>\n                            <div className='instructions-icons'>\n                                <img className='stikes-img' src={friendlySmall}></img>\n                                <p className='text'>But Not These</p>\n                            </div>\n                            <div className='instructions-icons'>\n                                <img className='stikes-img' src={BombIcon}></img>\n                                <p className='text'>Shoot These If You Want, But It's A Bad Idea</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    //uses info from the levelSelector button to set the selected level, and start the level\n    loadLevel = (info) => {\n        let obj = info\n        this.setState({\n            selectedLevel: obj,\n            playLevel: true\n        })\n    }\n    //fetches the levels\n    getLevels = () => {\n        fetch('http://localhost:3000/levels')\n        .then(resp => resp.json())\n        .then(data => {\n           this.setState({\n               levels: data\n           })\n        })\n    }\n\n    //renders the levelContainer (AKA the selected level)\n    play = () => {\n        return (\n            <LevelContainer \n            health={this.state.health}\n            selectedLevel={this.state.selectedLevel}\n            levelComplete={this.levelComplete}\n            />\n        )\n    }\n\n    levelComplete = (completed, levelPoints, health) =>{\n        if (completed === true){\n            this.setState({\n            totalPoints: this.state.totalPoints + levelPoints,\n            health: health,\n            playedOnce: true,\n            levelsCompleted: this.state.levelsCompleted + 1\n            })\n        }\n        this.setState({\n            playLevel: false,\n        })\n    }\n\n    render() {\n        //until a level is selected, show the levels avaiable\n        if (this.state.playLevel === false && this.state.shoppeView === false){\n            return (\n                this.levelSelect()\n            )\n        } \n        //after selected a level, render the level\n        else if (this.state.playLevel === true && this.state.shoppeView === false) {\n            return (\n                this.play()\n            )\n        }\n        else if (this.state.shoppeView === true && this.state.playLevel === false){\n            return this.loadShoppe()\n        }\n    }\n        \n    \n\n}"]},"metadata":{},"sourceType":"module"}